{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np \n",
    "import feather\n",
    "import os "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "os.chdir(\"/Users/matthewkeys/Desktop/CRES/Liver-Health-Project-2/LancetComission/Data/\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.set_option('display.max_columns', 500)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###### Preprocessing Mortality Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py:2785: DtypeWarning: Columns (1,2,3) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py:2785: DtypeWarning: Columns (1,2,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/IPython/core/interactiveshell.py:2785: DtypeWarning: Columns (1,2,3,4,5,6) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  interactivity=interactivity, compiler=compiler, result=result)\n"
     ]
    }
   ],
   "source": [
    "d1999 = pd.read_csv(\"1999.csv\", encoding=\"ISO-8859-1\")\n",
    "d2000 = pd.read_csv(\"2000.csv\", encoding=\"ISO-8859-1\")\n",
    "d2001 = pd.read_csv(\"2001.csv\", encoding=\"ISO-8859-1\")\n",
    "d2002 = pd.read_csv(\"2002.csv\", encoding=\"ISO-8859-1\")\n",
    "d2003 = pd.read_csv(\"2003.csv\", encoding=\"ISO-8859-1\")\n",
    "d2004 = pd.read_csv(\"2004.csv\", encoding=\"ISO-8859-1\")\n",
    "d2005 = pd.read_csv(\"2005.csv\", encoding=\"ISO-8859-1\")\n",
    "d2006 = pd.read_csv(\"2006.csv\", encoding=\"ISO-8859-1\")\n",
    "d2007 = pd.read_csv(\"2007.csv\", encoding=\"ISO-8859-1\")\n",
    "d2008 = pd.read_csv(\"2008.csv\", encoding=\"ISO-8859-1\")\n",
    "d2009 = pd.read_csv(\"2009.csv\", encoding=\"ISO-8859-1\")\n",
    "d2010 = pd.read_csv(\"2010.csv\", encoding=\"ISO-8859-1\")\n",
    "d2011 = pd.read_csv(\"2011.csv\", encoding=\"ISO-8859-1\")\n",
    "d2012 = pd.read_csv(\"2012.csv\", encoding=\"ISO-8859-1\")\n",
    "d2013 = pd.read_csv(\"2013.csv\", encoding=\"ISO-8859-1\")\n",
    "d2014 = pd.read_csv(\"2014.csv\", encoding=\"ISO-8859-1\")\n",
    "d2015 = pd.read_csv(\"2015.csv\", encoding=\"ISO-8859-1\")\n",
    "d2016 = pd.read_csv(\"2016.csv\", encoding=\"ISO-8859-1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# List the data \n",
    "dataa = [d1999, d2000, d2001, d2002, d2003, d2004, d2005, d2006, d2007,\n",
    "       d2008, d2009, d2010, d2011, d2012, d2013, d2014, d2015, d2016]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filter out genders from column values \n",
    "death_codes = [] \n",
    "\n",
    "for data in dataa: \n",
    "    x = filter(lambda a: a != '    Ambos sexos', list(data['Unnamed: 0']))\n",
    "    x = filter(lambda a: a != '   Ambos sexos', x)\n",
    "    x = filter(lambda a: a != ' Ambos sexos', x)\n",
    "    x = filter(lambda a: a != 'Ambos sexos', x)\n",
    "    x = filter(lambda a: a != '    Mujeres', x)\n",
    "    x = filter(lambda a: a != '   Mujeres', x)\n",
    "    x = filter(lambda a: a != ' Mujeres', x)\n",
    "    x = filter(lambda a: a != 'Mujeres', x)\n",
    "    x = filter(lambda a: a != '    Varones', x)\n",
    "    x = filter(lambda a: a != '   Varones', x)\n",
    "    x = filter(lambda a: a != ' Varones', x)\n",
    "    x = filter(lambda a: a != 'Varones', x)\n",
    "    x = filter(lambda a: a != '    Hombres', x)\n",
    "    x = filter(lambda a: a != '   Hombres', x)\n",
    "    x = filter(lambda a: a != ' Hombres', x)\n",
    "    x = filter(lambda a: a != 'Hombres', x)\n",
    "    death_codes.append(list(x)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11688\n",
      "11688\n",
      "11693\n",
      "11693\n",
      "11692\n",
      "11692\n",
      "11696\n",
      "11686\n",
      "11685\n",
      "11685\n",
      "11685\n",
      "11707\n",
      "11707\n",
      "11707\n",
      "11720\n",
      "11723\n",
      "11725\n",
      "11719\n",
      "IDs do not remain constant over yearly iterations\n"
     ]
    }
   ],
   "source": [
    "# Check for uniformity across years \n",
    "for codes in death_codes:\n",
    "    print(len(codes))\n",
    "    \n",
    "if death_codes[0] == death_codes[len(death_codes)-1]:\n",
    "    print(\"IDs remain constant over yearly iterations\")\n",
    "else: \n",
    "    print(\"IDs do not remain constant over yearly iterations\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "1\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "3\n",
      "4\n",
      "4\n"
     ]
    }
   ],
   "source": [
    "# In which years are there duplicates and how many?\n",
    "for codes in death_codes:\n",
    "    print(len(codes) - len(set(codes)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# What are the duplicates? \n",
    "seen = [] \n",
    "duplicates = []\n",
    "i = 0 \n",
    "\n",
    "for codes in death_codes: \n",
    "    seen.append([])\n",
    "    duplicates.append([])\n",
    "    for j, code in enumerate(codes):\n",
    "        if code not in seen[i]:\n",
    "            # Unique codes  \n",
    "            seen[i].append(code)\n",
    "        else:\n",
    "            # Capture duplicate row indices \n",
    "            duplicates[i].append(j)\n",
    "    i = i + 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[11685]\n",
      "[11685]\n",
      "[11685, 11686, 11687, 11688, 11689, 11690]\n",
      "[11685, 11686, 11687, 11688, 11689, 11690]\n",
      "[11684, 11685, 11686, 11687, 11688, 11689]\n",
      "[11684, 11685, 11686, 11687, 11688, 11689]\n",
      "[11688, 11689, 11690, 11691, 11692, 11693]\n",
      "[11678, 11679, 11680, 11681, 11682, 11683]\n",
      "[11677, 11678, 11679, 11680, 11681, 11682]\n",
      "[11677, 11678, 11679, 11680, 11681, 11682]\n",
      "[11677, 11678, 11679, 11680, 11681, 11682]\n",
      "[11698, 11699, 11700, 11701, 11702, 11703]\n",
      "[11698, 11699, 11700, 11701, 11702, 11703]\n",
      "[11698, 11699, 11700, 11701, 11702, 11703]\n",
      "[11711, 11712, 11713, 11714, 11715, 11716]\n",
      "[11713, 11715, 11718]\n",
      "[11713, 11715, 11717, 11720]\n",
      "[11707, 11709, 11711, 11714]\n"
     ]
    }
   ],
   "source": [
    "# What are the indices of the duplicates? \n",
    "for i in range(len(death_codes)): \n",
    "    print(duplicates[i])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "[\"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"\n",
      " \"1) ~'causas (lista detallada)\" \"1) ~'causas (lista detallada)\"]\n",
      "['nan' 'nan' 'nan']\n",
      "['nan' 'nan' 'nan' 'nan']\n",
      "['nan' 'nan' 'nan' 'nan']\n"
     ]
    }
   ],
   "source": [
    "# What are the terms that are duplicated? \n",
    "for i in range(len(death_codes)): \n",
    "    print(np.array(death_codes[i])[duplicates[i]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[46732, 46732, 46732, 46732, 46728, 46728, 46744, 46704, 46700, 46700, 46700, 46784, 46784, 46784, 46836, 46836, 46836, 46812]\n",
      "[46737, 46737, 46742, 46742, 46738, 46738, 46754, 46714, 46710, 46710, 46710, 46795, 46795, 46795, 46847, 46850, 46852, 46828]\n"
     ]
    }
   ],
   "source": [
    "# Check the indices of 'Notas:' in the 'Unnamed: 0' column in each yearly iteration. \n",
    "indices = [] \n",
    "lengths = [] \n",
    "\n",
    "for data in dataa: \n",
    "    x = list(data['Unnamed: 0']) \n",
    "    indices.append(x.index('Notas:'))\n",
    "    lengths.append(len(x))\n",
    "    \n",
    "print(indices)\n",
    "print(lengths)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# The above reveals that we can drop observations 'Notas:' onwards. \n",
    "d1999 = d1999.iloc[0:indices[0]]\n",
    "d2000 = d2000.iloc[0:indices[1]]\n",
    "d2001 = d2001.iloc[0:indices[2]]\n",
    "d2002 = d2002.iloc[0:indices[3]]\n",
    "d2003 = d2003.iloc[0:indices[4]]\n",
    "d2004 = d2004.iloc[0:indices[5]]\n",
    "d2005 = d2005.iloc[0:indices[6]]\n",
    "d2006 = d2006.iloc[0:indices[7]]\n",
    "d2007 = d2007.iloc[0:indices[8]]\n",
    "d2008 = d2008.iloc[0:indices[9]]\n",
    "d2009 = d2009.iloc[0:indices[10]]\n",
    "d2010 = d2010.iloc[0:indices[11]]\n",
    "d2011 = d2011.iloc[0:indices[12]]\n",
    "d2012 = d2012.iloc[0:indices[13]]\n",
    "d2013 = d2013.iloc[0:indices[14]]\n",
    "d2014 = d2014.iloc[0:indices[15]]\n",
    "d2015 = d2015.iloc[0:indices[16]]\n",
    "d2016 = d2016.iloc[0:indices[17]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Relist the data\n",
    "dataa = [d1999, d2000, d2001, d2002, d2003, d2004, d2005, d2006, d2007,\n",
    "       d2008, d2009, d2010, d2011, d2012, d2013, d2014, d2015, d2016]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[11683, 11683, 11683, 11683, 11682, 11682, 11686, 11676, 11675, 11675, 11675, 11696, 11696, 11696, 11709, 11709, 11709, 11703]\n",
      "[11688, 11688, 11693, 11693, 11692, 11692, 11696, 11686, 11685, 11685, 11685, 11707, 11707, 11707, 11720, 11723, 11725, 11719]\n"
     ]
    }
   ],
   "source": [
    "# Get indices for the lists now \n",
    "list_indices = [] \n",
    "list_lengths = [] \n",
    "\n",
    "for codes in death_codes: \n",
    "    list_indices.append(codes.index('Notas:'))\n",
    "    list_lengths.append(len(codes))\n",
    "    \n",
    "print(list_indices)\n",
    "print(list_lengths)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop observations now in the death code lists \n",
    "for i in range(len(death_codes)):\n",
    "    death_codes[i] = death_codes[i][:list_indices[i]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Triple occurence of each disease code \n",
    "new_ID_columns = [] \n",
    "\n",
    "for codes in death_codes: \n",
    "    x = [[codes[i], codes[i], codes[i], codes[i]] for i in range(len(codes))]\n",
    "    new_ID_columns.append([item for sublist in x for item in sublist])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Y89.9',\n",
       " 'Y89.9',\n",
       " 'Y89.9',\n",
       " 'Y89.9',\n",
       " 'U00-U99',\n",
       " 'U00-U99',\n",
       " 'U00-U99',\n",
       " 'U00-U99',\n",
       " 'U00-U49',\n",
       " 'U00-U49',\n",
       " 'U00-U49',\n",
       " 'U00-U49',\n",
       " 'U04',\n",
       " 'U04',\n",
       " 'U04',\n",
       " 'U04',\n",
       " 'U04.9',\n",
       " 'U04.9',\n",
       " 'U04.9',\n",
       " 'U04.9']"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check \n",
    "new_ID_columns[10][-20:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "46732\n",
      "46732\n",
      "46732\n",
      "46732\n",
      "46732\n",
      "46732\n",
      "46732\n",
      "46732\n",
      "46728\n",
      "46728\n",
      "46728\n",
      "46728\n",
      "46744\n",
      "46744\n",
      "46704\n",
      "46704\n",
      "46700\n",
      "46700\n",
      "46700\n",
      "46700\n",
      "46700\n",
      "46700\n",
      "46784\n",
      "46784\n",
      "46784\n",
      "46784\n",
      "46784\n",
      "46784\n",
      "46836\n",
      "46836\n",
      "46836\n",
      "46836\n",
      "46836\n",
      "46836\n",
      "46812\n",
      "46812\n"
     ]
    }
   ],
   "source": [
    "# Check lengths \n",
    "for i in range(len(dataa)): \n",
    "        print(dataa[i].shape[0])\n",
    "        print(len(new_ID_columns[i]))\n",
    "        \n",
    "# There are problems in 2005, 2007, 2008, 2010, 2011, 2012, 2013, 2014, 2015, 2016. \n",
    "# Difference of 4 each time. Why? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "46836\n",
      "46836\n"
     ]
    }
   ],
   "source": [
    "print(len(new_ID_columns[14]))\n",
    "print(d2013.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find the index at which the discrepency occurs\n",
    "for i in np.arange(0, len(list(d2013['Unnamed: 0'])), 4):\n",
    "    if d2013['Unnamed: 0'][i] != new_ID_columns[14][i]: \n",
    "        print(i) \n",
    "        break     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['W25.8',\n",
       " 'W25.8',\n",
       " 'W25.8',\n",
       " 'W25.8',\n",
       " 'W25.9',\n",
       " 'W25.9',\n",
       " 'W25.9',\n",
       " 'W25.9',\n",
       " 'W26',\n",
       " 'W26',\n",
       " 'W26',\n",
       " 'W26',\n",
       " 'W26.0',\n",
       " 'W26.0',\n",
       " 'W26.0',\n",
       " 'W26.0',\n",
       " 'W26.1',\n",
       " 'W26.1',\n",
       " 'W26.1',\n",
       " 'W26.1',\n",
       " 'W26.2',\n",
       " 'W26.2',\n",
       " 'W26.2',\n",
       " 'W26.2',\n",
       " 'W26.3',\n",
       " 'W26.3',\n",
       " 'W26.3',\n",
       " 'W26.3',\n",
       " 'W26.4',\n",
       " 'W26.4',\n",
       " 'W26.4',\n",
       " 'W26.4',\n",
       " 'W26.5',\n",
       " 'W26.5',\n",
       " 'W26.5',\n",
       " 'W26.5',\n",
       " 'W26.6',\n",
       " 'W26.6',\n",
       " 'W26.6',\n",
       " 'W26.6',\n",
       " 'W26.7',\n",
       " 'W26.7',\n",
       " 'W26.7',\n",
       " 'W26.7',\n",
       " 'W26.8',\n",
       " 'W26.8',\n",
       " 'W26.8',\n",
       " 'W26.8',\n",
       " 'W26.9',\n",
       " 'W26.9',\n",
       " 'W26.9',\n",
       " 'W26.9',\n",
       " 'W27',\n",
       " 'W27',\n",
       " 'W27',\n",
       " 'W27',\n",
       " 'W27.0',\n",
       " 'W27.0',\n",
       " 'W27.0',\n",
       " 'W27.0',\n",
       " 'W27.1',\n",
       " 'W27.1',\n",
       " 'W27.1',\n",
       " 'W27.1',\n",
       " 'W27.2',\n",
       " 'W27.2',\n",
       " 'W27.2',\n",
       " 'W27.2',\n",
       " 'W27.3',\n",
       " 'W27.3',\n",
       " 'W27.3',\n",
       " 'W27.3',\n",
       " 'W27.4',\n",
       " 'W27.4',\n",
       " 'W27.4',\n",
       " 'W27.4',\n",
       " 'W27.5',\n",
       " 'W27.5',\n",
       " 'W27.5',\n",
       " 'W27.5',\n",
       " 'W27.6',\n",
       " 'W27.6',\n",
       " 'W27.6',\n",
       " 'W27.6',\n",
       " 'W27.7',\n",
       " 'W27.7',\n",
       " 'W27.7',\n",
       " 'W27.7',\n",
       " 'W27.8',\n",
       " 'W27.8',\n",
       " 'W27.8',\n",
       " 'W27.8',\n",
       " 'W27.9',\n",
       " 'W27.9',\n",
       " 'W27.9',\n",
       " 'W27.9',\n",
       " 'W28',\n",
       " 'W28',\n",
       " 'W28',\n",
       " 'W28',\n",
       " 'W28.0',\n",
       " 'W28.0',\n",
       " 'W28.0',\n",
       " 'W28.0',\n",
       " 'W28.1',\n",
       " 'W28.1',\n",
       " 'W28.1',\n",
       " 'W28.1',\n",
       " 'W28.2',\n",
       " 'W28.2',\n",
       " 'W28.2',\n",
       " 'W28.2',\n",
       " 'W28.3',\n",
       " 'W28.3',\n",
       " 'W28.3',\n",
       " 'W28.3',\n",
       " 'W28.4',\n",
       " 'W28.4',\n",
       " 'W28.4',\n",
       " 'W28.4',\n",
       " 'W28.5',\n",
       " 'W28.5',\n",
       " 'W28.5',\n",
       " 'W28.5',\n",
       " 'W28.6',\n",
       " 'W28.6',\n",
       " 'W28.6',\n",
       " 'W28.6',\n",
       " 'W28.7',\n",
       " 'W28.7',\n",
       " 'W28.7',\n",
       " 'W28.7',\n",
       " 'W28.8',\n",
       " 'W28.8',\n",
       " 'W28.8',\n",
       " 'W28.8',\n",
       " 'W28.9',\n",
       " 'W28.9',\n",
       " 'W28.9',\n",
       " 'W28.9',\n",
       " 'W29',\n",
       " 'W29',\n",
       " 'W29',\n",
       " 'W29',\n",
       " 'W29.0',\n",
       " 'W29.0',\n",
       " 'W29.0',\n",
       " 'W29.0',\n",
       " 'W29.1',\n",
       " 'W29.1',\n",
       " 'W29.1',\n",
       " 'W29.1',\n",
       " 'W29.2',\n",
       " 'W29.2',\n",
       " 'W29.2',\n",
       " 'W29.2',\n",
       " 'W29.3',\n",
       " 'W29.3',\n",
       " 'W29.3',\n",
       " 'W29.3',\n",
       " 'W29.4',\n",
       " 'W29.4',\n",
       " 'W29.4',\n",
       " 'W29.4',\n",
       " 'W29.5',\n",
       " 'W29.5',\n",
       " 'W29.5',\n",
       " 'W29.5',\n",
       " 'W29.6',\n",
       " 'W29.6',\n",
       " 'W29.6',\n",
       " 'W29.6',\n",
       " 'W29.7',\n",
       " 'W29.7',\n",
       " 'W29.7',\n",
       " 'W29.7',\n",
       " 'W29.8',\n",
       " 'W29.8',\n",
       " 'W29.8',\n",
       " 'W29.8',\n",
       " 'W29.9',\n",
       " 'W29.9',\n",
       " 'W29.9',\n",
       " 'W29.9',\n",
       " 'W30',\n",
       " 'W30',\n",
       " 'W30',\n",
       " 'W30',\n",
       " 'W30.0',\n",
       " 'W30.0',\n",
       " 'W30.0',\n",
       " 'W30.0',\n",
       " 'W30.1',\n",
       " 'W30.1',\n",
       " 'W30.1',\n",
       " 'W30.1',\n",
       " 'W30.2',\n",
       " 'W30.2',\n",
       " 'W30.2',\n",
       " 'W30.2',\n",
       " 'W30.3',\n",
       " 'W30.3',\n",
       " 'W30.3',\n",
       " 'W30.3',\n",
       " 'W30.4',\n",
       " 'W30.4',\n",
       " 'W30.4',\n",
       " 'W30.4',\n",
       " 'W30.5',\n",
       " 'W30.5',\n",
       " 'W30.5',\n",
       " 'W30.5',\n",
       " 'W30.6',\n",
       " 'W30.6',\n",
       " 'W30.6',\n",
       " 'W30.6',\n",
       " 'W30.7',\n",
       " 'W30.7',\n",
       " 'W30.7',\n",
       " 'W30.7',\n",
       " 'W30.8',\n",
       " 'W30.8',\n",
       " 'W30.8',\n",
       " 'W30.8',\n",
       " 'W30.9',\n",
       " 'W30.9',\n",
       " 'W30.9',\n",
       " 'W30.9',\n",
       " 'W31',\n",
       " 'W31',\n",
       " 'W31',\n",
       " 'W31',\n",
       " 'W31.0',\n",
       " 'W31.0',\n",
       " 'W31.0',\n",
       " 'W31.0',\n",
       " 'W31.1',\n",
       " 'W31.1',\n",
       " 'W31.1',\n",
       " 'W31.1',\n",
       " 'W31.2',\n",
       " 'W31.2',\n",
       " 'W31.2',\n",
       " 'W31.2',\n",
       " 'W31.3',\n",
       " 'W31.3',\n",
       " 'W31.3',\n",
       " 'W31.3',\n",
       " 'W31.4',\n",
       " 'W31.4',\n",
       " 'W31.4',\n",
       " 'W31.4',\n",
       " 'W31.5',\n",
       " 'W31.5',\n",
       " 'W31.5',\n",
       " 'W31.5',\n",
       " 'W31.6',\n",
       " 'W31.6',\n",
       " 'W31.6',\n",
       " 'W31.6',\n",
       " 'W31.7',\n",
       " 'W31.7',\n",
       " 'W31.7',\n",
       " 'W31.7',\n",
       " 'W31.8',\n",
       " 'W31.8',\n",
       " 'W31.8',\n",
       " 'W31.8',\n",
       " 'W31.9',\n",
       " 'W31.9',\n",
       " 'W31.9',\n",
       " 'W31.9',\n",
       " 'W32',\n",
       " 'W32',\n",
       " 'W32',\n",
       " 'W32',\n",
       " 'W32.0',\n",
       " 'W32.0',\n",
       " 'W32.0',\n",
       " 'W32.0',\n",
       " 'W32.1',\n",
       " 'W32.1',\n",
       " 'W32.1',\n",
       " 'W32.1',\n",
       " 'W32.2',\n",
       " 'W32.2',\n",
       " 'W32.2',\n",
       " 'W32.2',\n",
       " 'W32.3',\n",
       " 'W32.3',\n",
       " 'W32.3',\n",
       " 'W32.3',\n",
       " 'W32.4',\n",
       " 'W32.4',\n",
       " 'W32.4',\n",
       " 'W32.4',\n",
       " 'W32.5',\n",
       " 'W32.5',\n",
       " 'W32.5',\n",
       " 'W32.5',\n",
       " 'W32.6',\n",
       " 'W32.6',\n",
       " 'W32.6',\n",
       " 'W32.6',\n",
       " 'W32.7',\n",
       " 'W32.7',\n",
       " 'W32.7',\n",
       " 'W32.7',\n",
       " 'W32.8',\n",
       " 'W32.8',\n",
       " 'W32.8',\n",
       " 'W32.8',\n",
       " 'W32.9',\n",
       " 'W32.9',\n",
       " 'W32.9',\n",
       " 'W32.9',\n",
       " 'W33',\n",
       " 'W33',\n",
       " 'W33',\n",
       " 'W33',\n",
       " 'W33.0',\n",
       " 'W33.0',\n",
       " 'W33.0',\n",
       " 'W33.0',\n",
       " 'W33.1',\n",
       " 'W33.1',\n",
       " 'W33.1',\n",
       " 'W33.1',\n",
       " 'W33.2',\n",
       " 'W33.2',\n",
       " 'W33.2',\n",
       " 'W33.2',\n",
       " 'W33.3',\n",
       " 'W33.3',\n",
       " 'W33.3',\n",
       " 'W33.3',\n",
       " 'W33.4',\n",
       " 'W33.4',\n",
       " 'W33.4',\n",
       " 'W33.4',\n",
       " 'W33.5',\n",
       " 'W33.5',\n",
       " 'W33.5',\n",
       " 'W33.5',\n",
       " 'W33.6',\n",
       " 'W33.6',\n",
       " 'W33.6',\n",
       " 'W33.6',\n",
       " 'W33.7',\n",
       " 'W33.7',\n",
       " 'W33.7',\n",
       " 'W33.7',\n",
       " 'W33.8',\n",
       " 'W33.8',\n",
       " 'W33.8',\n",
       " 'W33.8',\n",
       " 'W33.9',\n",
       " 'W33.9',\n",
       " 'W33.9',\n",
       " 'W33.9',\n",
       " 'W34',\n",
       " 'W34',\n",
       " 'W34',\n",
       " 'W34',\n",
       " 'W34.0',\n",
       " 'W34.0',\n",
       " 'W34.0',\n",
       " 'W34.0',\n",
       " 'W34.1',\n",
       " 'W34.1',\n",
       " 'W34.1',\n",
       " 'W34.1',\n",
       " 'W34.2',\n",
       " 'W34.2',\n",
       " 'W34.2',\n",
       " 'W34.2',\n",
       " 'W34.3',\n",
       " 'W34.3',\n",
       " 'W34.3',\n",
       " 'W34.3',\n",
       " 'W34.4',\n",
       " 'W34.4',\n",
       " 'W34.4',\n",
       " 'W34.4',\n",
       " 'W34.5',\n",
       " 'W34.5',\n",
       " 'W34.5',\n",
       " 'W34.5',\n",
       " 'W34.6',\n",
       " 'W34.6',\n",
       " 'W34.6',\n",
       " 'W34.6',\n",
       " 'W34.7',\n",
       " 'W34.7',\n",
       " 'W34.7',\n",
       " 'W34.7',\n",
       " 'W34.8',\n",
       " 'W34.8',\n",
       " 'W34.8',\n",
       " 'W34.8',\n",
       " 'W34.9',\n",
       " 'W34.9',\n",
       " 'W34.9',\n",
       " 'W34.9',\n",
       " 'W35',\n",
       " 'W35',\n",
       " 'W35',\n",
       " 'W35',\n",
       " 'W35.0',\n",
       " 'W35.0',\n",
       " 'W35.0',\n",
       " 'W35.0',\n",
       " 'W35.1',\n",
       " 'W35.1',\n",
       " 'W35.1',\n",
       " 'W35.1',\n",
       " 'W35.2',\n",
       " 'W35.2',\n",
       " 'W35.2',\n",
       " 'W35.2',\n",
       " 'W35.3',\n",
       " 'W35.3',\n",
       " 'W35.3',\n",
       " 'W35.3',\n",
       " 'W35.4',\n",
       " 'W35.4',\n",
       " 'W35.4',\n",
       " 'W35.4',\n",
       " 'W35.5',\n",
       " 'W35.5',\n",
       " 'W35.5',\n",
       " 'W35.5',\n",
       " 'W35.6',\n",
       " 'W35.6',\n",
       " 'W35.6',\n",
       " 'W35.6',\n",
       " 'W35.7',\n",
       " 'W35.7',\n",
       " 'W35.7',\n",
       " 'W35.7',\n",
       " 'W35.8',\n",
       " 'W35.8',\n",
       " 'W35.8',\n",
       " 'W35.8',\n",
       " 'W35.9',\n",
       " 'W35.9',\n",
       " 'W35.9',\n",
       " 'W35.9',\n",
       " 'W36',\n",
       " 'W36',\n",
       " 'W36',\n",
       " 'W36',\n",
       " 'W36.0',\n",
       " 'W36.0',\n",
       " 'W36.0',\n",
       " 'W36.0',\n",
       " 'W36.1',\n",
       " 'W36.1',\n",
       " 'W36.1',\n",
       " 'W36.1',\n",
       " 'W36.2',\n",
       " 'W36.2',\n",
       " 'W36.2',\n",
       " 'W36.2',\n",
       " 'W36.3',\n",
       " 'W36.3',\n",
       " 'W36.3',\n",
       " 'W36.3',\n",
       " 'W36.4',\n",
       " 'W36.4',\n",
       " 'W36.4',\n",
       " 'W36.4',\n",
       " 'W36.5',\n",
       " 'W36.5',\n",
       " 'W36.5',\n",
       " 'W36.5',\n",
       " 'W36.6',\n",
       " 'W36.6',\n",
       " 'W36.6',\n",
       " 'W36.6',\n",
       " 'W36.7',\n",
       " 'W36.7',\n",
       " 'W36.7',\n",
       " 'W36.7',\n",
       " 'W36.8',\n",
       " 'W36.8',\n",
       " 'W36.8',\n",
       " 'W36.8',\n",
       " 'W36.9',\n",
       " 'W36.9',\n",
       " 'W36.9',\n",
       " 'W36.9',\n",
       " 'W37',\n",
       " 'W37',\n",
       " 'W37',\n",
       " 'W37',\n",
       " 'W37.0',\n",
       " 'W37.0',\n",
       " 'W37.0',\n",
       " 'W37.0',\n",
       " 'W37.1',\n",
       " 'W37.1',\n",
       " 'W37.1',\n",
       " 'W37.1',\n",
       " 'W37.2',\n",
       " 'W37.2',\n",
       " 'W37.2',\n",
       " 'W37.2',\n",
       " 'W37.3',\n",
       " 'W37.3',\n",
       " 'W37.3',\n",
       " 'W37.3',\n",
       " 'W37.4',\n",
       " 'W37.4',\n",
       " 'W37.4',\n",
       " 'W37.4',\n",
       " 'W37.5',\n",
       " 'W37.5',\n",
       " 'W37.5',\n",
       " 'W37.5',\n",
       " 'W37.6',\n",
       " 'W37.6',\n",
       " 'W37.6',\n",
       " 'W37.6',\n",
       " 'W37.7',\n",
       " 'W37.7',\n",
       " 'W37.7',\n",
       " 'W37.7',\n",
       " 'W37.8',\n",
       " 'W37.8',\n",
       " 'W37.8',\n",
       " 'W37.8',\n",
       " 'W37.9',\n",
       " 'W37.9',\n",
       " 'W37.9',\n",
       " 'W37.9',\n",
       " 'W38',\n",
       " 'W38',\n",
       " 'W38',\n",
       " 'W38',\n",
       " 'W38.0',\n",
       " 'W38.0',\n",
       " 'W38.0',\n",
       " 'W38.0',\n",
       " 'W38.1',\n",
       " 'W38.1',\n",
       " 'W38.1',\n",
       " 'W38.1',\n",
       " 'W38.2',\n",
       " 'W38.2',\n",
       " 'W38.2',\n",
       " 'W38.2',\n",
       " 'W38.3',\n",
       " 'W38.3',\n",
       " 'W38.3',\n",
       " 'W38.3',\n",
       " 'W38.4',\n",
       " 'W38.4',\n",
       " 'W38.4',\n",
       " 'W38.4',\n",
       " 'W38.5',\n",
       " 'W38.5',\n",
       " 'W38.5',\n",
       " 'W38.5',\n",
       " 'W38.6',\n",
       " 'W38.6',\n",
       " 'W38.6',\n",
       " 'W38.6',\n",
       " 'W38.7',\n",
       " 'W38.7',\n",
       " 'W38.7',\n",
       " 'W38.7',\n",
       " 'W38.8',\n",
       " 'W38.8',\n",
       " 'W38.8',\n",
       " 'W38.8',\n",
       " 'W38.9',\n",
       " 'W38.9',\n",
       " 'W38.9',\n",
       " 'W38.9',\n",
       " 'W39',\n",
       " 'W39',\n",
       " 'W39',\n",
       " 'W39',\n",
       " 'W39.0',\n",
       " 'W39.0',\n",
       " 'W39.0',\n",
       " 'W39.0',\n",
       " 'W39.1',\n",
       " 'W39.1',\n",
       " 'W39.1',\n",
       " 'W39.1',\n",
       " 'W39.2',\n",
       " 'W39.2',\n",
       " 'W39.2',\n",
       " 'W39.2',\n",
       " 'W39.3',\n",
       " 'W39.3',\n",
       " 'W39.3',\n",
       " 'W39.3',\n",
       " 'W39.4',\n",
       " 'W39.4',\n",
       " 'W39.4',\n",
       " 'W39.4',\n",
       " 'W39.5',\n",
       " 'W39.5',\n",
       " 'W39.5',\n",
       " 'W39.5',\n",
       " 'W39.6',\n",
       " 'W39.6',\n",
       " 'W39.6',\n",
       " 'W39.6',\n",
       " 'W39.7',\n",
       " 'W39.7',\n",
       " 'W39.7',\n",
       " 'W39.7',\n",
       " 'W39.8',\n",
       " 'W39.8',\n",
       " 'W39.8',\n",
       " 'W39.8',\n",
       " 'W39.9',\n",
       " 'W39.9',\n",
       " 'W39.9',\n",
       " 'W39.9',\n",
       " 'W40',\n",
       " 'W40',\n",
       " 'W40',\n",
       " 'W40',\n",
       " 'W40.0',\n",
       " 'W40.0',\n",
       " 'W40.0',\n",
       " 'W40.0',\n",
       " 'W40.1',\n",
       " 'W40.1',\n",
       " 'W40.1',\n",
       " 'W40.1',\n",
       " 'W40.2',\n",
       " 'W40.2',\n",
       " 'W40.2',\n",
       " 'W40.2',\n",
       " 'W40.3',\n",
       " 'W40.3',\n",
       " 'W40.3',\n",
       " 'W40.3',\n",
       " 'W40.4',\n",
       " 'W40.4',\n",
       " 'W40.4',\n",
       " 'W40.4',\n",
       " 'W40.5',\n",
       " 'W40.5',\n",
       " 'W40.5',\n",
       " 'W40.5',\n",
       " 'W40.6',\n",
       " 'W40.6',\n",
       " 'W40.6',\n",
       " 'W40.6',\n",
       " 'W40.7',\n",
       " 'W40.7',\n",
       " 'W40.7',\n",
       " 'W40.7',\n",
       " 'W40.8',\n",
       " 'W40.8',\n",
       " 'W40.8',\n",
       " 'W40.8',\n",
       " 'W40.9',\n",
       " 'W40.9',\n",
       " 'W40.9',\n",
       " 'W40.9',\n",
       " 'W41',\n",
       " 'W41',\n",
       " 'W41',\n",
       " 'W41',\n",
       " 'W41.0',\n",
       " 'W41.0',\n",
       " 'W41.0',\n",
       " 'W41.0',\n",
       " 'W41.1',\n",
       " 'W41.1',\n",
       " 'W41.1',\n",
       " 'W41.1',\n",
       " 'W41.2',\n",
       " 'W41.2',\n",
       " 'W41.2',\n",
       " 'W41.2',\n",
       " 'W41.3',\n",
       " 'W41.3',\n",
       " 'W41.3',\n",
       " 'W41.3',\n",
       " 'W41.4',\n",
       " 'W41.4',\n",
       " 'W41.4',\n",
       " 'W41.4',\n",
       " 'W41.5',\n",
       " 'W41.5',\n",
       " 'W41.5',\n",
       " 'W41.5',\n",
       " 'W41.6',\n",
       " 'W41.6',\n",
       " 'W41.6',\n",
       " 'W41.6',\n",
       " 'W41.7',\n",
       " 'W41.7',\n",
       " 'W41.7',\n",
       " 'W41.7',\n",
       " 'W41.8',\n",
       " 'W41.8',\n",
       " 'W41.8',\n",
       " 'W41.8',\n",
       " 'W41.9',\n",
       " 'W41.9',\n",
       " 'W41.9',\n",
       " 'W41.9',\n",
       " 'W42',\n",
       " 'W42',\n",
       " 'W42',\n",
       " 'W42',\n",
       " 'W42.0',\n",
       " 'W42.0',\n",
       " 'W42.0',\n",
       " 'W42.0',\n",
       " 'W42.1',\n",
       " 'W42.1',\n",
       " 'W42.1',\n",
       " 'W42.1',\n",
       " 'W42.2',\n",
       " 'W42.2',\n",
       " 'W42.2',\n",
       " 'W42.2',\n",
       " 'W42.3',\n",
       " 'W42.3',\n",
       " 'W42.3',\n",
       " 'W42.3',\n",
       " 'W42.4',\n",
       " 'W42.4',\n",
       " 'W42.4',\n",
       " 'W42.4',\n",
       " 'W42.5',\n",
       " 'W42.5',\n",
       " 'W42.5',\n",
       " 'W42.5',\n",
       " 'W42.6',\n",
       " 'W42.6',\n",
       " 'W42.6',\n",
       " 'W42.6',\n",
       " 'W42.7',\n",
       " 'W42.7',\n",
       " 'W42.7',\n",
       " 'W42.7',\n",
       " 'W42.8',\n",
       " 'W42.8',\n",
       " 'W42.8',\n",
       " 'W42.8',\n",
       " 'W42.9',\n",
       " 'W42.9',\n",
       " 'W42.9',\n",
       " 'W42.9',\n",
       " 'W43',\n",
       " 'W43',\n",
       " 'W43',\n",
       " 'W43',\n",
       " 'W43.0',\n",
       " 'W43.0',\n",
       " 'W43.0',\n",
       " 'W43.0',\n",
       " 'W43.1',\n",
       " 'W43.1',\n",
       " 'W43.1',\n",
       " 'W43.1',\n",
       " 'W43.2',\n",
       " 'W43.2',\n",
       " 'W43.2',\n",
       " 'W43.2',\n",
       " 'W43.3',\n",
       " 'W43.3',\n",
       " 'W43.3',\n",
       " 'W43.3',\n",
       " 'W43.4',\n",
       " 'W43.4',\n",
       " 'W43.4',\n",
       " 'W43.4',\n",
       " 'W43.5',\n",
       " 'W43.5',\n",
       " 'W43.5',\n",
       " 'W43.5',\n",
       " 'W43.6',\n",
       " 'W43.6',\n",
       " 'W43.6',\n",
       " 'W43.6',\n",
       " 'W43.7',\n",
       " 'W43.7',\n",
       " 'W43.7',\n",
       " 'W43.7',\n",
       " 'W43.8',\n",
       " 'W43.8',\n",
       " 'W43.8',\n",
       " 'W43.8',\n",
       " 'W43.9',\n",
       " 'W43.9',\n",
       " 'W43.9',\n",
       " 'W43.9',\n",
       " 'W44',\n",
       " 'W44',\n",
       " 'W44',\n",
       " 'W44',\n",
       " 'W44.0',\n",
       " 'W44.0',\n",
       " 'W44.0',\n",
       " 'W44.0',\n",
       " 'W44.1',\n",
       " 'W44.1',\n",
       " 'W44.1',\n",
       " 'W44.1',\n",
       " 'W44.2',\n",
       " 'W44.2',\n",
       " 'W44.2',\n",
       " 'W44.2',\n",
       " 'W44.3',\n",
       " 'W44.3',\n",
       " 'W44.3',\n",
       " 'W44.3',\n",
       " 'W44.4',\n",
       " 'W44.4',\n",
       " 'W44.4',\n",
       " 'W44.4',\n",
       " 'W44.5',\n",
       " 'W44.5',\n",
       " 'W44.5',\n",
       " 'W44.5',\n",
       " 'W44.6',\n",
       " 'W44.6',\n",
       " 'W44.6',\n",
       " 'W44.6',\n",
       " 'W44.7',\n",
       " 'W44.7',\n",
       " 'W44.7',\n",
       " 'W44.7',\n",
       " 'W44.8',\n",
       " 'W44.8',\n",
       " 'W44.8',\n",
       " 'W44.8',\n",
       " 'W44.9',\n",
       " 'W44.9',\n",
       " 'W44.9',\n",
       " 'W44.9',\n",
       " 'W45',\n",
       " 'W45',\n",
       " 'W45',\n",
       " 'W45',\n",
       " 'W45.0',\n",
       " 'W45.0',\n",
       " 'W45.0',\n",
       " 'W45.0',\n",
       " 'W45.1',\n",
       " 'W45.1',\n",
       " 'W45.1',\n",
       " 'W45.1',\n",
       " 'W45.2',\n",
       " 'W45.2',\n",
       " 'W45.2',\n",
       " 'W45.2',\n",
       " 'W45.3',\n",
       " 'W45.3',\n",
       " 'W45.3',\n",
       " 'W45.3',\n",
       " 'W45.4',\n",
       " 'W45.4',\n",
       " 'W45.4',\n",
       " 'W45.4',\n",
       " 'W45.5',\n",
       " 'W45.5',\n",
       " 'W45.5',\n",
       " 'W45.5',\n",
       " 'W45.6',\n",
       " 'W45.6',\n",
       " 'W45.6',\n",
       " 'W45.6',\n",
       " 'W45.7',\n",
       " 'W45.7',\n",
       " 'W45.7',\n",
       " 'W45.7',\n",
       " 'W45.8',\n",
       " 'W45.8',\n",
       " 'W45.8',\n",
       " 'W45.8',\n",
       " 'W45.9',\n",
       " 'W45.9',\n",
       " 'W45.9',\n",
       " 'W45.9',\n",
       " 'W46',\n",
       " 'W46',\n",
       " 'W46',\n",
       " 'W46',\n",
       " 'W46.0',\n",
       " 'W46.0',\n",
       " 'W46.0',\n",
       " 'W46.0',\n",
       " 'W46.1',\n",
       " 'W46.1',\n",
       " 'W46.1',\n",
       " 'W46.1',\n",
       " 'W46.2',\n",
       " 'W46.2',\n",
       " 'W46.2',\n",
       " 'W46.2',\n",
       " 'W46.3',\n",
       " 'W46.3',\n",
       " 'W46.3',\n",
       " 'W46.3',\n",
       " 'W46.4',\n",
       " 'W46.4',\n",
       " 'W46.4',\n",
       " 'W46.4',\n",
       " 'W46.5',\n",
       " 'W46.5',\n",
       " 'W46.5',\n",
       " 'W46.5',\n",
       " 'W46.6',\n",
       " 'W46.6',\n",
       " 'W46.6',\n",
       " 'W46.6',\n",
       " 'W46.7',\n",
       " 'W46.7',\n",
       " 'W46.7',\n",
       " 'W46.7',\n",
       " 'W46.8',\n",
       " 'W46.8',\n",
       " 'W46.8',\n",
       " 'W46.8',\n",
       " 'W46.9',\n",
       " 'W46.9',\n",
       " 'W46.9',\n",
       " 'W46.9',\n",
       " 'W49',\n",
       " 'W49',\n",
       " 'W49',\n",
       " 'W49',\n",
       " 'W49.0',\n",
       " 'W49.0',\n",
       " 'W49.0',\n",
       " 'W49.0',\n",
       " 'W49.1',\n",
       " 'W49.1',\n",
       " 'W49.1',\n",
       " 'W49.1',\n",
       " 'W49.2',\n",
       " 'W49.2',\n",
       " 'W49.2',\n",
       " 'W49.2',\n",
       " 'W49.3',\n",
       " 'W49.3',\n",
       " 'W49.3',\n",
       " 'W49.3',\n",
       " 'W49.4',\n",
       " 'W49.4',\n",
       " 'W49.4',\n",
       " 'W49.4',\n",
       " 'W49.5',\n",
       " 'W49.5',\n",
       " 'W49.5',\n",
       " 'W49.5',\n",
       " 'W49.6',\n",
       " 'W49.6',\n",
       " 'W49.6',\n",
       " 'W49.6',\n",
       " 'W49.7',\n",
       " 'W49.7',\n",
       " 'W49.7',\n",
       " 'W49.7',\n",
       " 'W49.8',\n",
       " 'W49.8',\n",
       " 'W49.8',\n",
       " 'W49.8',\n",
       " 'W49.9',\n",
       " 'W49.9',\n",
       " 'W49.9',\n",
       " 'W49.9',\n",
       " 'W50-W64',\n",
       " 'W50-W64',\n",
       " 'W50-W64',\n",
       " 'W50-W64',\n",
       " 'W50',\n",
       " 'W50',\n",
       " 'W50',\n",
       " 'W50',\n",
       " 'W50.0',\n",
       " 'W50.0',\n",
       " 'W50.0',\n",
       " 'W50.0',\n",
       " 'W50.1',\n",
       " 'W50.1',\n",
       " 'W50.1',\n",
       " 'W50.1',\n",
       " 'W50.2',\n",
       " 'W50.2',\n",
       " 'W50.2',\n",
       " 'W50.2',\n",
       " 'W50.3',\n",
       " 'W50.3',\n",
       " 'W50.3',\n",
       " 'W50.3',\n",
       " ...]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_ID_columns[14][36860:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Todas las edades</th>\n",
       "      <th>Menores de 1 a¤o</th>\n",
       "      <th>De 1 a¤o</th>\n",
       "      <th>De 2 a¤os</th>\n",
       "      <th>De 3 a¤os</th>\n",
       "      <th>De 4 a¤os</th>\n",
       "      <th>De 5 a 9 a¤os</th>\n",
       "      <th>De 10 a 14 a¤os</th>\n",
       "      <th>De 15 a 19 a¤os</th>\n",
       "      <th>...</th>\n",
       "      <th>De 50 a 54 a¤os</th>\n",
       "      <th>De 55 a 59 a¤os</th>\n",
       "      <th>De 60 a 64 a¤os</th>\n",
       "      <th>De 65 a 69 a¤os</th>\n",
       "      <th>De 70 a 74 a¤os</th>\n",
       "      <th>De 75 a 79 a¤os</th>\n",
       "      <th>De 80 a 84 a¤os</th>\n",
       "      <th>De 85 a 89 a¤os</th>\n",
       "      <th>De 90 a 94 a¤os</th>\n",
       "      <th>De 95 a¤os y m s</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>22932</th>\n",
       "      <td>N20.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22933</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22934</th>\n",
       "      <td>Varones</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22935</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22936</th>\n",
       "      <td>N20.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22937</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22938</th>\n",
       "      <td>Varones</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22939</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22940</th>\n",
       "      <td>N20.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22941</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22942</th>\n",
       "      <td>Varones</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22943</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22944</th>\n",
       "      <td>N20.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22945</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22946</th>\n",
       "      <td>Varones</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22947</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22948</th>\n",
       "      <td>N21</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22949</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22950</th>\n",
       "      <td>Varones</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22951</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22952</th>\n",
       "      <td>N21.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22953</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22954</th>\n",
       "      <td>Varones</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22955</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22956</th>\n",
       "      <td>N21.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22957</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22958</th>\n",
       "      <td>Varones</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22959</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22960</th>\n",
       "      <td>N21.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22961</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46670</th>\n",
       "      <td>Varones</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46671</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46672</th>\n",
       "      <td>Y89.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46673</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46674</th>\n",
       "      <td>Varones</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46675</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46676</th>\n",
       "      <td>Y89.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46677</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46678</th>\n",
       "      <td>Varones</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46679</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46680</th>\n",
       "      <td>Y89.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46681</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46682</th>\n",
       "      <td>Varones</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46683</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46684</th>\n",
       "      <td>U00-U99</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46685</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46686</th>\n",
       "      <td>Varones</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46687</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46688</th>\n",
       "      <td>U00-U49</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46689</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46690</th>\n",
       "      <td>Varones</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46691</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46692</th>\n",
       "      <td>U04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46693</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46694</th>\n",
       "      <td>Varones</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46695</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46696</th>\n",
       "      <td>U04.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46697</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46698</th>\n",
       "      <td>Varones</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46699</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>23768 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Unnamed: 0 Todas las edades Menores de 1 a¤o De 1 a¤o De 2 a¤os  \\\n",
       "22932            N20.0              NaN              NaN      NaN       NaN   \n",
       "22933      Ambos sexos               15                0        0         0   \n",
       "22934          Varones                3                0        0         0   \n",
       "22935          Mujeres               12                0        0         0   \n",
       "22936            N20.1              NaN              NaN      NaN       NaN   \n",
       "22937      Ambos sexos                2                0        0         0   \n",
       "22938          Varones                2                0        0         0   \n",
       "22939          Mujeres                0                0        0         0   \n",
       "22940            N20.2              NaN              NaN      NaN       NaN   \n",
       "22941      Ambos sexos                0                0        0         0   \n",
       "22942          Varones                0                0        0         0   \n",
       "22943          Mujeres                0                0        0         0   \n",
       "22944            N20.9              NaN              NaN      NaN       NaN   \n",
       "22945      Ambos sexos                2                0        0         0   \n",
       "22946          Varones                1                0        0         0   \n",
       "22947          Mujeres                1                0        0         0   \n",
       "22948              N21              NaN              NaN      NaN       NaN   \n",
       "22949      Ambos sexos                4                0        0         0   \n",
       "22950          Varones                3                0        0         0   \n",
       "22951          Mujeres                1                0        0         0   \n",
       "22952            N21.0              NaN              NaN      NaN       NaN   \n",
       "22953      Ambos sexos                3                0        0         0   \n",
       "22954          Varones                2                0        0         0   \n",
       "22955          Mujeres                1                0        0         0   \n",
       "22956            N21.1              NaN              NaN      NaN       NaN   \n",
       "22957      Ambos sexos                1                0        0         0   \n",
       "22958          Varones                1                0        0         0   \n",
       "22959          Mujeres                0                0        0         0   \n",
       "22960            N21.8              NaN              NaN      NaN       NaN   \n",
       "22961      Ambos sexos                0                0        0         0   \n",
       "...                ...              ...              ...      ...       ...   \n",
       "46670          Varones                7                0        0         0   \n",
       "46671          Mujeres                2                0        0         0   \n",
       "46672            Y89.0              NaN              NaN      NaN       NaN   \n",
       "46673      Ambos sexos                0                0        0         0   \n",
       "46674          Varones                0                0        0         0   \n",
       "46675          Mujeres                0                0        0         0   \n",
       "46676            Y89.1              NaN              NaN      NaN       NaN   \n",
       "46677      Ambos sexos                0                0        0         0   \n",
       "46678          Varones                0                0        0         0   \n",
       "46679          Mujeres                0                0        0         0   \n",
       "46680            Y89.9              NaN              NaN      NaN       NaN   \n",
       "46681      Ambos sexos                9                0        0         0   \n",
       "46682          Varones                7                0        0         0   \n",
       "46683          Mujeres                2                0        0         0   \n",
       "46684          U00-U99              NaN              NaN      NaN       NaN   \n",
       "46685      Ambos sexos                0                0        0         0   \n",
       "46686          Varones                0                0        0         0   \n",
       "46687          Mujeres                0                0        0         0   \n",
       "46688          U00-U49              NaN              NaN      NaN       NaN   \n",
       "46689      Ambos sexos                0                0        0         0   \n",
       "46690          Varones                0                0        0         0   \n",
       "46691          Mujeres                0                0        0         0   \n",
       "46692              U04              NaN              NaN      NaN       NaN   \n",
       "46693      Ambos sexos                0                0        0         0   \n",
       "46694          Varones                0                0        0         0   \n",
       "46695          Mujeres                0                0        0         0   \n",
       "46696            U04.9              NaN              NaN      NaN       NaN   \n",
       "46697      Ambos sexos                0                0        0         0   \n",
       "46698          Varones                0                0        0         0   \n",
       "46699          Mujeres                0                0        0         0   \n",
       "\n",
       "      De 3 a¤os De 4 a¤os De 5 a 9 a¤os  De 10 a 14 a¤os  De 15 a 19 a¤os  \\\n",
       "22932       NaN       NaN           NaN              NaN              NaN   \n",
       "22933         0         0             0              0.0              0.0   \n",
       "22934         0         0             0              0.0              0.0   \n",
       "22935         0         0             0              0.0              0.0   \n",
       "22936       NaN       NaN           NaN              NaN              NaN   \n",
       "22937         0         0             0              0.0              0.0   \n",
       "22938         0         0             0              0.0              0.0   \n",
       "22939         0         0             0              0.0              0.0   \n",
       "22940       NaN       NaN           NaN              NaN              NaN   \n",
       "22941         0         0             0              0.0              0.0   \n",
       "22942         0         0             0              0.0              0.0   \n",
       "22943         0         0             0              0.0              0.0   \n",
       "22944       NaN       NaN           NaN              NaN              NaN   \n",
       "22945         0         0             0              0.0              0.0   \n",
       "22946         0         0             0              0.0              0.0   \n",
       "22947         0         0             0              0.0              0.0   \n",
       "22948       NaN       NaN           NaN              NaN              NaN   \n",
       "22949         0         0             0              0.0              0.0   \n",
       "22950         0         0             0              0.0              0.0   \n",
       "22951         0         0             0              0.0              0.0   \n",
       "22952       NaN       NaN           NaN              NaN              NaN   \n",
       "22953         0         0             0              0.0              0.0   \n",
       "22954         0         0             0              0.0              0.0   \n",
       "22955         0         0             0              0.0              0.0   \n",
       "22956       NaN       NaN           NaN              NaN              NaN   \n",
       "22957         0         0             0              0.0              0.0   \n",
       "22958         0         0             0              0.0              0.0   \n",
       "22959         0         0             0              0.0              0.0   \n",
       "22960       NaN       NaN           NaN              NaN              NaN   \n",
       "22961         0         0             0              0.0              0.0   \n",
       "...         ...       ...           ...              ...              ...   \n",
       "46670         0         0             0              0.0              0.0   \n",
       "46671         0         0             0              0.0              0.0   \n",
       "46672       NaN       NaN           NaN              NaN              NaN   \n",
       "46673         0         0             0              0.0              0.0   \n",
       "46674         0         0             0              0.0              0.0   \n",
       "46675         0         0             0              0.0              0.0   \n",
       "46676       NaN       NaN           NaN              NaN              NaN   \n",
       "46677         0         0             0              0.0              0.0   \n",
       "46678         0         0             0              0.0              0.0   \n",
       "46679         0         0             0              0.0              0.0   \n",
       "46680       NaN       NaN           NaN              NaN              NaN   \n",
       "46681         0         0             0              0.0              0.0   \n",
       "46682         0         0             0              0.0              0.0   \n",
       "46683         0         0             0              0.0              0.0   \n",
       "46684       NaN       NaN           NaN              NaN              NaN   \n",
       "46685         0         0             0              0.0              0.0   \n",
       "46686         0         0             0              0.0              0.0   \n",
       "46687         0         0             0              0.0              0.0   \n",
       "46688       NaN       NaN           NaN              NaN              NaN   \n",
       "46689         0         0             0              0.0              0.0   \n",
       "46690         0         0             0              0.0              0.0   \n",
       "46691         0         0             0              0.0              0.0   \n",
       "46692       NaN       NaN           NaN              NaN              NaN   \n",
       "46693         0         0             0              0.0              0.0   \n",
       "46694         0         0             0              0.0              0.0   \n",
       "46695         0         0             0              0.0              0.0   \n",
       "46696       NaN       NaN           NaN              NaN              NaN   \n",
       "46697         0         0             0              0.0              0.0   \n",
       "46698         0         0             0              0.0              0.0   \n",
       "46699         0         0             0              0.0              0.0   \n",
       "\n",
       "             ...         De 50 a 54 a¤os  De 55 a 59 a¤os  De 60 a 64 a¤os  \\\n",
       "22932        ...                     NaN              NaN              NaN   \n",
       "22933        ...                     0.0              1.0              1.0   \n",
       "22934        ...                     0.0              0.0              0.0   \n",
       "22935        ...                     0.0              1.0              1.0   \n",
       "22936        ...                     NaN              NaN              NaN   \n",
       "22937        ...                     0.0              0.0              0.0   \n",
       "22938        ...                     0.0              0.0              0.0   \n",
       "22939        ...                     0.0              0.0              0.0   \n",
       "22940        ...                     NaN              NaN              NaN   \n",
       "22941        ...                     0.0              0.0              0.0   \n",
       "22942        ...                     0.0              0.0              0.0   \n",
       "22943        ...                     0.0              0.0              0.0   \n",
       "22944        ...                     NaN              NaN              NaN   \n",
       "22945        ...                     0.0              0.0              0.0   \n",
       "22946        ...                     0.0              0.0              0.0   \n",
       "22947        ...                     0.0              0.0              0.0   \n",
       "22948        ...                     NaN              NaN              NaN   \n",
       "22949        ...                     0.0              0.0              0.0   \n",
       "22950        ...                     0.0              0.0              0.0   \n",
       "22951        ...                     0.0              0.0              0.0   \n",
       "22952        ...                     NaN              NaN              NaN   \n",
       "22953        ...                     0.0              0.0              0.0   \n",
       "22954        ...                     0.0              0.0              0.0   \n",
       "22955        ...                     0.0              0.0              0.0   \n",
       "22956        ...                     NaN              NaN              NaN   \n",
       "22957        ...                     0.0              0.0              0.0   \n",
       "22958        ...                     0.0              0.0              0.0   \n",
       "22959        ...                     0.0              0.0              0.0   \n",
       "22960        ...                     NaN              NaN              NaN   \n",
       "22961        ...                     0.0              0.0              0.0   \n",
       "...          ...                     ...              ...              ...   \n",
       "46670        ...                     1.0              1.0              0.0   \n",
       "46671        ...                     0.0              0.0              0.0   \n",
       "46672        ...                     NaN              NaN              NaN   \n",
       "46673        ...                     0.0              0.0              0.0   \n",
       "46674        ...                     0.0              0.0              0.0   \n",
       "46675        ...                     0.0              0.0              0.0   \n",
       "46676        ...                     NaN              NaN              NaN   \n",
       "46677        ...                     0.0              0.0              0.0   \n",
       "46678        ...                     0.0              0.0              0.0   \n",
       "46679        ...                     0.0              0.0              0.0   \n",
       "46680        ...                     NaN              NaN              NaN   \n",
       "46681        ...                     1.0              1.0              0.0   \n",
       "46682        ...                     1.0              1.0              0.0   \n",
       "46683        ...                     0.0              0.0              0.0   \n",
       "46684        ...                     NaN              NaN              NaN   \n",
       "46685        ...                     0.0              0.0              0.0   \n",
       "46686        ...                     0.0              0.0              0.0   \n",
       "46687        ...                     0.0              0.0              0.0   \n",
       "46688        ...                     NaN              NaN              NaN   \n",
       "46689        ...                     0.0              0.0              0.0   \n",
       "46690        ...                     0.0              0.0              0.0   \n",
       "46691        ...                     0.0              0.0              0.0   \n",
       "46692        ...                     NaN              NaN              NaN   \n",
       "46693        ...                     0.0              0.0              0.0   \n",
       "46694        ...                     0.0              0.0              0.0   \n",
       "46695        ...                     0.0              0.0              0.0   \n",
       "46696        ...                     NaN              NaN              NaN   \n",
       "46697        ...                     0.0              0.0              0.0   \n",
       "46698        ...                     0.0              0.0              0.0   \n",
       "46699        ...                     0.0              0.0              0.0   \n",
       "\n",
       "       De 65 a 69 a¤os  De 70 a 74 a¤os  De 75 a 79 a¤os  De 80 a 84 a¤os  \\\n",
       "22932              NaN              NaN              NaN              NaN   \n",
       "22933              1.0              0.0              2.0              2.0   \n",
       "22934              1.0              0.0              1.0              1.0   \n",
       "22935              0.0              0.0              1.0              1.0   \n",
       "22936              NaN              NaN              NaN              NaN   \n",
       "22937              0.0              1.0              0.0              1.0   \n",
       "22938              0.0              1.0              0.0              1.0   \n",
       "22939              0.0              0.0              0.0              0.0   \n",
       "22940              NaN              NaN              NaN              NaN   \n",
       "22941              0.0              0.0              0.0              0.0   \n",
       "22942              0.0              0.0              0.0              0.0   \n",
       "22943              0.0              0.0              0.0              0.0   \n",
       "22944              NaN              NaN              NaN              NaN   \n",
       "22945              0.0              0.0              0.0              2.0   \n",
       "22946              0.0              0.0              0.0              1.0   \n",
       "22947              0.0              0.0              0.0              1.0   \n",
       "22948              NaN              NaN              NaN              NaN   \n",
       "22949              0.0              0.0              2.0              0.0   \n",
       "22950              0.0              0.0              1.0              0.0   \n",
       "22951              0.0              0.0              1.0              0.0   \n",
       "22952              NaN              NaN              NaN              NaN   \n",
       "22953              0.0              0.0              2.0              0.0   \n",
       "22954              0.0              0.0              1.0              0.0   \n",
       "22955              0.0              0.0              1.0              0.0   \n",
       "22956              NaN              NaN              NaN              NaN   \n",
       "22957              0.0              0.0              0.0              0.0   \n",
       "22958              0.0              0.0              0.0              0.0   \n",
       "22959              0.0              0.0              0.0              0.0   \n",
       "22960              NaN              NaN              NaN              NaN   \n",
       "22961              0.0              0.0              0.0              0.0   \n",
       "...                ...              ...              ...              ...   \n",
       "46670              0.0              1.0              2.0              0.0   \n",
       "46671              0.0              0.0              1.0              1.0   \n",
       "46672              NaN              NaN              NaN              NaN   \n",
       "46673              0.0              0.0              0.0              0.0   \n",
       "46674              0.0              0.0              0.0              0.0   \n",
       "46675              0.0              0.0              0.0              0.0   \n",
       "46676              NaN              NaN              NaN              NaN   \n",
       "46677              0.0              0.0              0.0              0.0   \n",
       "46678              0.0              0.0              0.0              0.0   \n",
       "46679              0.0              0.0              0.0              0.0   \n",
       "46680              NaN              NaN              NaN              NaN   \n",
       "46681              0.0              1.0              3.0              1.0   \n",
       "46682              0.0              1.0              2.0              0.0   \n",
       "46683              0.0              0.0              1.0              1.0   \n",
       "46684              NaN              NaN              NaN              NaN   \n",
       "46685              0.0              0.0              0.0              0.0   \n",
       "46686              0.0              0.0              0.0              0.0   \n",
       "46687              0.0              0.0              0.0              0.0   \n",
       "46688              NaN              NaN              NaN              NaN   \n",
       "46689              0.0              0.0              0.0              0.0   \n",
       "46690              0.0              0.0              0.0              0.0   \n",
       "46691              0.0              0.0              0.0              0.0   \n",
       "46692              NaN              NaN              NaN              NaN   \n",
       "46693              0.0              0.0              0.0              0.0   \n",
       "46694              0.0              0.0              0.0              0.0   \n",
       "46695              0.0              0.0              0.0              0.0   \n",
       "46696              NaN              NaN              NaN              NaN   \n",
       "46697              0.0              0.0              0.0              0.0   \n",
       "46698              0.0              0.0              0.0              0.0   \n",
       "46699              0.0              0.0              0.0              0.0   \n",
       "\n",
       "       De 85 a 89 a¤os  De 90 a 94 a¤os  De 95 a¤os y m s  \n",
       "22932              NaN              NaN               NaN  \n",
       "22933              4.0              4.0               0.0  \n",
       "22934              0.0              0.0               0.0  \n",
       "22935              4.0              4.0               0.0  \n",
       "22936              NaN              NaN               NaN  \n",
       "22937              0.0              0.0               0.0  \n",
       "22938              0.0              0.0               0.0  \n",
       "22939              0.0              0.0               0.0  \n",
       "22940              NaN              NaN               NaN  \n",
       "22941              0.0              0.0               0.0  \n",
       "22942              0.0              0.0               0.0  \n",
       "22943              0.0              0.0               0.0  \n",
       "22944              NaN              NaN               NaN  \n",
       "22945              0.0              0.0               0.0  \n",
       "22946              0.0              0.0               0.0  \n",
       "22947              0.0              0.0               0.0  \n",
       "22948              NaN              NaN               NaN  \n",
       "22949              2.0              0.0               0.0  \n",
       "22950              2.0              0.0               0.0  \n",
       "22951              0.0              0.0               0.0  \n",
       "22952              NaN              NaN               NaN  \n",
       "22953              1.0              0.0               0.0  \n",
       "22954              1.0              0.0               0.0  \n",
       "22955              0.0              0.0               0.0  \n",
       "22956              NaN              NaN               NaN  \n",
       "22957              1.0              0.0               0.0  \n",
       "22958              1.0              0.0               0.0  \n",
       "22959              0.0              0.0               0.0  \n",
       "22960              NaN              NaN               NaN  \n",
       "22961              0.0              0.0               0.0  \n",
       "...                ...              ...               ...  \n",
       "46670              1.0              0.0               1.0  \n",
       "46671              0.0              0.0               0.0  \n",
       "46672              NaN              NaN               NaN  \n",
       "46673              0.0              0.0               0.0  \n",
       "46674              0.0              0.0               0.0  \n",
       "46675              0.0              0.0               0.0  \n",
       "46676              NaN              NaN               NaN  \n",
       "46677              0.0              0.0               0.0  \n",
       "46678              0.0              0.0               0.0  \n",
       "46679              0.0              0.0               0.0  \n",
       "46680              NaN              NaN               NaN  \n",
       "46681              1.0              0.0               1.0  \n",
       "46682              1.0              0.0               1.0  \n",
       "46683              0.0              0.0               0.0  \n",
       "46684              NaN              NaN               NaN  \n",
       "46685              0.0              0.0               0.0  \n",
       "46686              0.0              0.0               0.0  \n",
       "46687              0.0              0.0               0.0  \n",
       "46688              NaN              NaN               NaN  \n",
       "46689              0.0              0.0               0.0  \n",
       "46690              0.0              0.0               0.0  \n",
       "46691              0.0              0.0               0.0  \n",
       "46692              NaN              NaN               NaN  \n",
       "46693              0.0              0.0               0.0  \n",
       "46694              0.0              0.0               0.0  \n",
       "46695              0.0              0.0               0.0  \n",
       "46696              NaN              NaN               NaN  \n",
       "46697              0.0              0.0               0.0  \n",
       "46698              0.0              0.0               0.0  \n",
       "46699              0.0              0.0               0.0  \n",
       "\n",
       "[23768 rows x 26 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d2007[22932:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:19: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n"
     ]
    }
   ],
   "source": [
    "# Now merge these new columns into the existing dataframes \n",
    "d1999['Death_Code_ID'] = new_ID_columns[0]\n",
    "d2000['Death_Code_ID'] = new_ID_columns[1]\n",
    "d2001['Death_Code_ID'] = new_ID_columns[2]\n",
    "d2002['Death_Code_ID'] = new_ID_columns[3]\n",
    "d2003['Death_Code_ID'] = new_ID_columns[4]\n",
    "d2004['Death_Code_ID'] = new_ID_columns[5]\n",
    "d2005['Death_Code_ID'] = new_ID_columns[6]\n",
    "d2006['Death_Code_ID'] = new_ID_columns[7]\n",
    "d2007['Death_Code_ID'] = new_ID_columns[8]\n",
    "d2008['Death_Code_ID'] = new_ID_columns[9]\n",
    "d2009['Death_Code_ID'] = new_ID_columns[10]\n",
    "d2010['Death_Code_ID'] = new_ID_columns[11]\n",
    "d2011['Death_Code_ID'] = new_ID_columns[12]\n",
    "d2012['Death_Code_ID'] = new_ID_columns[13]\n",
    "d2013['Death_Code_ID'] = new_ID_columns[14]\n",
    "d2014['Death_Code_ID'] = new_ID_columns[15]\n",
    "d2015['Death_Code_ID'] = new_ID_columns[16]\n",
    "d2016['Death_Code_ID'] = new_ID_columns[17]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Remove rows with NaNs, by default removes the 'no gender' rows. \n",
    "d1999 = d1999.dropna()\n",
    "d2000 = d2000.dropna()\n",
    "d2001 = d2001.dropna()\n",
    "d2002 = d2002.dropna()\n",
    "d2003 = d2003.dropna()\n",
    "d2004 = d2004.dropna()\n",
    "d2005 = d2005.dropna()\n",
    "d2006 = d2006.dropna()\n",
    "d2007 = d2007.dropna()\n",
    "d2008 = d2008.dropna()\n",
    "d2009 = d2009.dropna()\n",
    "d2010 = d2010.dropna()\n",
    "d2011 = d2011.dropna()\n",
    "d2012 = d2012.dropna()\n",
    "d2013 = d2013.dropna()\n",
    "d2014 = d2014.dropna()\n",
    "d2015 = d2015.dropna()\n",
    "d2016 = d2016.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  app.launch_new_instance()\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:6: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:7: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:8: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:9: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:10: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:11: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:12: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:13: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:14: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:15: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:16: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:17: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:18: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "/Users/matthewkeys/anaconda3/lib/python3.6/site-packages/ipykernel/__main__.py:19: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n"
     ]
    }
   ],
   "source": [
    "# Generate year columns \n",
    "d1999['Year'] = 1999 \n",
    "d2000['Year'] = 2000 \n",
    "d2001['Year'] = 2001\n",
    "d2002['Year'] = 2002\n",
    "d2003['Year'] = 2003\n",
    "d2004['Year'] = 2004\n",
    "d2005['Year'] = 2005\n",
    "d2006['Year'] = 2006\n",
    "d2007['Year'] = 2007 \n",
    "d2008['Year'] = 2008\n",
    "d2009['Year'] = 2009\n",
    "d2010['Year'] = 2010\n",
    "d2011['Year'] = 2011 \n",
    "d2012['Year'] = 2012 \n",
    "d2013['Year'] = 2013\n",
    "d2014['Year'] = 2014\n",
    "d2015['Year'] = 2015\n",
    "d2016['Year'] = 2016 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n",
      "Column names constant over yearly iterations\n"
     ]
    }
   ],
   "source": [
    "# Check uniformity of columns\n",
    "for data in dataa: \n",
    "    if list(dataa[1]) != list(data): \n",
    "        print(\"Column names change over yearly iterations\")\n",
    "    else: \n",
    "        print(\"Column names constant over yearly iterations\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Concatenate data \n",
    "dataa = [d1999, d2000, d2001, d2002, d2003, d2004, d2005, d2006, d2007,\n",
    "       d2008, d2009, d2010, d2011, d2012, d2013, d2014, d2015, d2016]\n",
    "\n",
    "final_data = pd.concat(dataa)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fix column names \n",
    "final_data.columns = [\"Gender\", \"All Ages\", \"Less Than 1 yo\", \"1 yo\", \"2 yo\", \n",
    "                      \"3 yo\", \"4 yo\", \"5 to 9 yo\", \"10 to 14 yo\",\n",
    "                      \"15 to 19 yo\", \"20 to 24 yo\", \"25 to 29 yo\", \"30 to 34 yo\",\n",
    "                      \"35 to 39 yo\", \"40 to 44 yo\", \"45 to 49 yo\",\n",
    "                      \"50 to 54 yo\", \"55 to 59 yo\", \"60 to 64 yo\", \"65 to 69 yo\", \n",
    "                      \"70 to 74 yo\", \"75 to 79 yo\", \"80 to 84 yo\", \n",
    "                      \"85 to 89 yo\", \"90 to 94 yo\", \"Greater Than 95 yo\", \"Death Code\", \"Year\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>All_Ages</th>\n",
       "      <th>Less_Than_1</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5-9</th>\n",
       "      <th>10-14</th>\n",
       "      <th>15-19</th>\n",
       "      <th>...</th>\n",
       "      <th>60-64</th>\n",
       "      <th>65-69</th>\n",
       "      <th>70-74</th>\n",
       "      <th>75-79</th>\n",
       "      <th>80-84</th>\n",
       "      <th>85-89</th>\n",
       "      <th>90-94</th>\n",
       "      <th>Greater_Than_95</th>\n",
       "      <th>Death_Code</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>371102</td>\n",
       "      <td>1700</td>\n",
       "      <td>179</td>\n",
       "      <td>87</td>\n",
       "      <td>70</td>\n",
       "      <td>75</td>\n",
       "      <td>299</td>\n",
       "      <td>375.0</td>\n",
       "      <td>1262.0</td>\n",
       "      <td>...</td>\n",
       "      <td>18230.0</td>\n",
       "      <td>30699.0</td>\n",
       "      <td>42781.0</td>\n",
       "      <td>56267.0</td>\n",
       "      <td>60927.0</td>\n",
       "      <td>62627.0</td>\n",
       "      <td>37635.0</td>\n",
       "      <td>13143.0</td>\n",
       "      <td>A00-Y89</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Varones</td>\n",
       "      <td>195255</td>\n",
       "      <td>940</td>\n",
       "      <td>93</td>\n",
       "      <td>41</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>187</td>\n",
       "      <td>231.0</td>\n",
       "      <td>921.0</td>\n",
       "      <td>...</td>\n",
       "      <td>12869.0</td>\n",
       "      <td>21131.0</td>\n",
       "      <td>27184.0</td>\n",
       "      <td>31972.0</td>\n",
       "      <td>27995.0</td>\n",
       "      <td>23932.0</td>\n",
       "      <td>12048.0</td>\n",
       "      <td>3364.0</td>\n",
       "      <td>A00-Y89</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Mujeres</td>\n",
       "      <td>175847</td>\n",
       "      <td>760</td>\n",
       "      <td>86</td>\n",
       "      <td>46</td>\n",
       "      <td>34</td>\n",
       "      <td>35</td>\n",
       "      <td>112</td>\n",
       "      <td>144.0</td>\n",
       "      <td>341.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5361.0</td>\n",
       "      <td>9568.0</td>\n",
       "      <td>15597.0</td>\n",
       "      <td>24295.0</td>\n",
       "      <td>32932.0</td>\n",
       "      <td>38695.0</td>\n",
       "      <td>25587.0</td>\n",
       "      <td>9779.0</td>\n",
       "      <td>A00-Y89</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Ambos sexos</td>\n",
       "      <td>6520</td>\n",
       "      <td>24</td>\n",
       "      <td>23</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>21</td>\n",
       "      <td>10.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>...</td>\n",
       "      <td>292.0</td>\n",
       "      <td>476.0</td>\n",
       "      <td>655.0</td>\n",
       "      <td>787.0</td>\n",
       "      <td>710.0</td>\n",
       "      <td>664.0</td>\n",
       "      <td>316.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>A00-B99</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Varones</td>\n",
       "      <td>3934</td>\n",
       "      <td>15</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>3.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>178.0</td>\n",
       "      <td>302.0</td>\n",
       "      <td>368.0</td>\n",
       "      <td>402.0</td>\n",
       "      <td>306.0</td>\n",
       "      <td>261.0</td>\n",
       "      <td>121.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>A00-B99</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Gender All_Ages Less_Than_1    1   2   3   4  5-9  10-14   15-19  \\\n",
       "1      Ambos sexos   371102        1700  179  87  70  75  299  375.0  1262.0   \n",
       "2          Varones   195255         940   93  41  36  40  187  231.0   921.0   \n",
       "3          Mujeres   175847         760   86  46  34  35  112  144.0   341.0   \n",
       "5      Ambos sexos     6520          24   23   9  12   6   21   10.0    19.0   \n",
       "6          Varones     3934          15   11   4   7   4   11    3.0    15.0   \n",
       "\n",
       "   ...     60-64    65-69    70-74    75-79    80-84    85-89    90-94  \\\n",
       "1  ...   18230.0  30699.0  42781.0  56267.0  60927.0  62627.0  37635.0   \n",
       "2  ...   12869.0  21131.0  27184.0  31972.0  27995.0  23932.0  12048.0   \n",
       "3  ...    5361.0   9568.0  15597.0  24295.0  32932.0  38695.0  25587.0   \n",
       "5  ...     292.0    476.0    655.0    787.0    710.0    664.0    316.0   \n",
       "6  ...     178.0    302.0    368.0    402.0    306.0    261.0    121.0   \n",
       "\n",
       "   Greater_Than_95  Death_Code  Year  \n",
       "1          13143.0     A00-Y89  1999  \n",
       "2           3364.0     A00-Y89  1999  \n",
       "3           9779.0     A00-Y89  1999  \n",
       "5            108.0     A00-B99  1999  \n",
       "6             24.0     A00-B99  1999  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Fix Gender Column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "s = \"   Ambos sexos\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Ambos sexos'"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s.lstrip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fix Gender Column \n",
    "final_data = final_data.replace(['    Ambos sexos', '   Ambos sexos', ' Ambos sexos',\n",
    "                                'Ambos sexos'], 'Both Genders')\n",
    "\n",
    "final_data = final_data.replace(['    Mujeres', '   Mujeres', ' Mujeres', 'Mujeres'],\n",
    "                               \"Female\")\n",
    "\n",
    "final_data = final_data.replace(['    Varones', '   Varones', ' Varones', 'Varones',\n",
    "                                '    Hombres', '   Hombres', ' Hombres', 'Hombres'], 'Male')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Both Genders', 'Female', 'Male'}"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check uniqueness in the gender column \n",
    "set(list(final_data['Gender']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender              object\n",
       "All_Ages            object\n",
       "Less_Than_1         object\n",
       "1                   object\n",
       "2                   object\n",
       "3                   object\n",
       "4                   object\n",
       "5-9                 object\n",
       "10-14              float64\n",
       "15-19              float64\n",
       "20-24              float64\n",
       "25-29              float64\n",
       "30-34              float64\n",
       "35-39              float64\n",
       "40-44              float64\n",
       "45-49              float64\n",
       "50-54              float64\n",
       "55-59              float64\n",
       "60-64              float64\n",
       "65-69              float64\n",
       "70-74              float64\n",
       "75-79              float64\n",
       "80-84              float64\n",
       "85-89              float64\n",
       "90-94              float64\n",
       "Greater_Than_95    float64\n",
       "Death_Code          object\n",
       "Year                 int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set path \n",
    "path = '/Users/matthewkeys/Desktop/CRES/Liver-Health-Project-2/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save Data with CSV \n",
    "final_data.to_csv(path+\"cleaned_death_code_data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "ArrowInvalid",
     "evalue": "('Error converting from Python objects to Double: Got Python object of type str but can only handle these types: float', 'Conversion failed for column All_Ages with type object')",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mArrowInvalid\u001b[0m                              Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-82-5f346944a035>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Save Data with Feather\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mfeather\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite_dataframe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfinal_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpath\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34m\"cleaned_death_code_data.feather\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pyarrow/feather.py\u001b[0m in \u001b[0;36mwrite_feather\u001b[0;34m(df, dest)\u001b[0m\n\u001b[1;32m    179\u001b[0m     \u001b[0mwriter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mFeatherWriter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdest\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    180\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 181\u001b[0;31m         \u001b[0mwriter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    182\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    183\u001b[0m         \u001b[0;31m# Try to make sure the resource is closed\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pyarrow/feather.py\u001b[0m in \u001b[0;36mwrite\u001b[0;34m(self, df)\u001b[0m\n\u001b[1;32m     91\u001b[0m         \u001b[0;31m# TODO(wesm): Remove this length check, see ARROW-1732\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     92\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 93\u001b[0;31m             \u001b[0mbatch\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRecordBatch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfrom_pandas\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpreserve_index\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     94\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mschema\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnames\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     95\u001b[0m                 \u001b[0mcol\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pyarrow/table.pxi\u001b[0m in \u001b[0;36mpyarrow.lib.RecordBatch.from_pandas\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pyarrow/pandas_compat.py\u001b[0m in \u001b[0;36mdataframe_to_arrays\u001b[0;34m(df, schema, preserve_index, nthreads, columns)\u001b[0m\n\u001b[1;32m    384\u001b[0m             arrays = list(executor.map(convert_column,\n\u001b[1;32m    385\u001b[0m                                        \u001b[0mcolumns_to_convert\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 386\u001b[0;31m                                        convert_types))\n\u001b[0m\u001b[1;32m    387\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    388\u001b[0m     \u001b[0mtypes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0marrays\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/concurrent/futures/_base.py\u001b[0m in \u001b[0;36mresult_iterator\u001b[0;34m()\u001b[0m\n\u001b[1;32m    584\u001b[0m                     \u001b[0;31m# Careful not to keep a reference to the popped future\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    585\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0mtimeout\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 586\u001b[0;31m                         \u001b[0;32myield\u001b[0m \u001b[0mfs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    587\u001b[0m                     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    588\u001b[0m                         \u001b[0;32myield\u001b[0m \u001b[0mfs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mend_time\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/concurrent/futures/_base.py\u001b[0m in \u001b[0;36mresult\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    423\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mCancelledError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    424\u001b[0m             \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_state\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mFINISHED\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 425\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__get_result\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    426\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    427\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_condition\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/concurrent/futures/_base.py\u001b[0m in \u001b[0;36m__get_result\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    382\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__get_result\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    383\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_exception\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 384\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_exception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    385\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    386\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_result\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/concurrent/futures/thread.py\u001b[0m in \u001b[0;36mrun\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     54\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     55\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 56\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     57\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mBaseException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mexc\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     58\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfuture\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pyarrow/pandas_compat.py\u001b[0m in \u001b[0;36mconvert_column\u001b[0;34m(col, ty)\u001b[0m\n\u001b[1;32m    373\u001b[0m             e.args += (\"Conversion failed for column {0!s} with type {1!s}\"\n\u001b[1;32m    374\u001b[0m                        .format(col.name, col.dtype),)\n\u001b[0;32m--> 375\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    376\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    377\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mnthreads\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pyarrow/pandas_compat.py\u001b[0m in \u001b[0;36mconvert_column\u001b[0;34m(col, ty)\u001b[0m\n\u001b[1;32m    367\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mconvert_column\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mty\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    368\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 369\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mpa\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfrom_pandas\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mty\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    370\u001b[0m         except (pa.ArrowInvalid,\n\u001b[1;32m    371\u001b[0m                 \u001b[0mpa\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mArrowNotImplementedError\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pyarrow/array.pxi\u001b[0m in \u001b[0;36mpyarrow.lib.array\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pyarrow/array.pxi\u001b[0m in \u001b[0;36mpyarrow.lib._ndarray_to_array\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pyarrow/error.pxi\u001b[0m in \u001b[0;36mpyarrow.lib.check_status\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mArrowInvalid\u001b[0m: ('Error converting from Python objects to Double: Got Python object of type str but can only handle these types: float', 'Conversion failed for column All_Ages with type object')"
     ]
    }
   ],
   "source": [
    "# Save Data with Feather  \n",
    "feather.write_dataframe(final_data, path+\"cleaned_death_code_data.feather\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###### Preprocessing Population Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "metadata": {},
   "outputs": [],
   "source": [
    "population_data = pd.read_csv(\"/Users/matthewkeys/Desktop/CRES/Liver-Health-Project-2/LancetComission/Data/Population base.csv\", encoding=\"ISO-8859-1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 257,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating new age column\n",
    "age_column = ['Total', 'De 0 a 4 años', 'De 5 a 9 años', 'De 10 a 14 años', 'De 15 a 19 años',\n",
    "             'De 20 a 24 años', 'De 25 a 29 años', 'De 30 a 34 años', 'De 35 a 39 años',\n",
    "             'De 40 a 44 años', 'De 45 a 49 años', 'De 50 a 54 años', 'De 55 a 59 años',\n",
    "             'De 60 a 64 años', 'De 65 a 69 años', 'De 70 a 74 años', 'De 75 a 79 años',\n",
    "             'De 80 a 84 años', 'De 85 a 89 años', 'De 90 a 94 años', 'De 95 a 99 años',\n",
    "             '100 y más años']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quadruple occurences\n",
    "age_column = [[age_column[i], age_column[i], age_column[i], age_column[i]] \n",
    "              for i in range(len(age_column))]\n",
    "\n",
    "age_column = [item for sublist in age_column for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put into existing dataframe \n",
    "population_data['Age'] = age_column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop observations corresponding to age titles\n",
    "K = ['    Ambos sexos', '    Hombres', '    Mujeres']\n",
    "L = [] \n",
    "\n",
    "for word in list(population_data['Unnamed: 0']): \n",
    "    if word in K:\n",
    "        L.append(True)\n",
    "    else:\n",
    "        L.append(False) \n",
    "    \n",
    "    \n",
    "population_data = population_data[L]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fix gender column\n",
    "population_data = population_data.replace('    Ambos sexos', 'Both Genders')\n",
    "population_data = population_data.replace('    Hombres', 'Male')\n",
    "population_data = population_data.replace('    Mujeres', 'Female')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create new dataframe \n",
    "population = pd.DataFrame()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create the year column \n",
    "Year = [2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005,\n",
    "        2004, 2003, 2002, 2001, 2000, 1999]\n",
    "Year = [[Year[i], Year[i], Year[i]] for i in range(len(Year))]\n",
    "Year = [item for sublist in Year for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create the gender column\n",
    "Gender = ['Both Genders', 'Male', 'Female']\n",
    "Gender = [Gender for i in range(18)]\n",
    "Gender = [item for sublist in Gender for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for all ages \n",
    "All_Ages = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][0:3]\n",
    "All_Ages = All_Ages.T.values.tolist()\n",
    "All_Ages = [item for sublist in All_Ages for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 0 to 4 \n",
    "d0to4 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][3:6]\n",
    "d0to4 = d0to4.T.values.tolist()\n",
    "d0to4 = [item for sublist in d0to4 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 5 to 9 \n",
    "d5to9 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][6:9]\n",
    "d5to9 = d5to9.T.values.tolist()\n",
    "d5to9 = [item for sublist in d5to9 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 10 to 14 \n",
    "d10to14 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][9:12]\n",
    "d10to14 = d10to14.T.values.tolist()\n",
    "d10to14 = [item for sublist in d10to14 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 15 to 19 \n",
    "d15to19 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][12:15]\n",
    "d15to19 = d15to19.T.values.tolist()\n",
    "d15to19 = [item for sublist in d15to19 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 20 to 24 \n",
    "d20to24 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][15:18]\n",
    "d20to24 = d20to24.T.values.tolist()\n",
    "d20to24 = [item for sublist in d20to24 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 25 to 29 \n",
    "d25to29 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][18:21]\n",
    "d25to29 = d25to29.T.values.tolist()\n",
    "d25to29 = [item for sublist in d25to29 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 30 to 34 \n",
    "d30to34 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][21:24]\n",
    "d30to34 = d30to34.T.values.tolist()\n",
    "d30to34 = [item for sublist in d30to34 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 35 to 39 \n",
    "d35to39 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][24:27]\n",
    "d35to39 = d35to39.T.values.tolist()\n",
    "d35to39 = [item for sublist in d35to39 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 286,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 40 to 44 \n",
    "d40to44 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][27:30]\n",
    "d40to44 = d40to44.T.values.tolist()\n",
    "d40to44 = [item for sublist in d40to44 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 45 to 49 \n",
    "d45to49 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][30:33]\n",
    "d45to49 = d45to49.T.values.tolist()\n",
    "d45to49 = [item for sublist in d45to49 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 50 to 54 \n",
    "d50to54 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][33:36]\n",
    "d50to54 = d50to54.T.values.tolist()\n",
    "d50to54 = [item for sublist in d50to54 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 55 to 59 \n",
    "d55to59 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][36:39]\n",
    "d55to59 = d55to59.T.values.tolist()\n",
    "d55to59 = [item for sublist in d55to59 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 60 to 64 \n",
    "d60to64 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][39:42]\n",
    "d60to64 = d60to64.T.values.tolist()\n",
    "d60to64 = [item for sublist in d60to64 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 291,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 65 to 69 \n",
    "d65to69 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][42:45]\n",
    "d65to69 = d65to69.T.values.tolist()\n",
    "d65to69 = [item for sublist in d65to69 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 292,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 70 to 74 \n",
    "d70to74 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][45:48]\n",
    "d70to74 = d70to74.T.values.tolist()\n",
    "d70to74 = [item for sublist in d70to74 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 293,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 75 to 79 \n",
    "d75to79 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][48:51]\n",
    "d75to79 = d75to79.T.values.tolist()\n",
    "d75to79 = [item for sublist in d75to79 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 294,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 80 to 84 \n",
    "d80to84 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][51:54]\n",
    "d80to84 = d80to84.T.values.tolist()\n",
    "d80to84 = [item for sublist in d80to84 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 295,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 85 to 89 \n",
    "d85to89 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][54:57]\n",
    "d85to89 = d85to89.T.values.tolist()\n",
    "d85to89 = [item for sublist in d85to89 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 296,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 90 to 94 \n",
    "d90to94 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][57:60]\n",
    "d90to94 = d90to94.T.values.tolist()\n",
    "d90to94 = [item for sublist in d90to94 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for ages 95 to 99 \n",
    "d95to99 = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][60:63]\n",
    "d95to99 = d95to99.T.values.tolist()\n",
    "d95to99 = [item for sublist in d95to99 for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create column for older than 100 \n",
    "d100orMore = population_data[['2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008',\n",
    "                 '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999']][63:66]\n",
    "d100orMore = d100orMore.T.values.tolist()\n",
    "d100orMore = [item for sublist in d100orMore for item in sublist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 253,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>2016</th>\n",
       "      <th>2015</th>\n",
       "      <th>2014</th>\n",
       "      <th>2013</th>\n",
       "      <th>2012</th>\n",
       "      <th>2011</th>\n",
       "      <th>2010</th>\n",
       "      <th>2009</th>\n",
       "      <th>2008</th>\n",
       "      <th>2007</th>\n",
       "      <th>2006</th>\n",
       "      <th>2005</th>\n",
       "      <th>2004</th>\n",
       "      <th>2003</th>\n",
       "      <th>2002</th>\n",
       "      <th>2001</th>\n",
       "      <th>2000</th>\n",
       "      <th>1999</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>46400000.0</td>\n",
       "      <td>46400000.0</td>\n",
       "      <td>46500000.0</td>\n",
       "      <td>46700000.0</td>\n",
       "      <td>46800000.0</td>\n",
       "      <td>46700000.0</td>\n",
       "      <td>46500000.0</td>\n",
       "      <td>46200000.0</td>\n",
       "      <td>45700000.0</td>\n",
       "      <td>44800000.0</td>\n",
       "      <td>44000000.0</td>\n",
       "      <td>43300000.0</td>\n",
       "      <td>42500000.0</td>\n",
       "      <td>41800000.0</td>\n",
       "      <td>41000000.0</td>\n",
       "      <td>40700000.0</td>\n",
       "      <td>40500000.0</td>\n",
       "      <td>40300000.0</td>\n",
       "      <td>Total</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>22800000.0</td>\n",
       "      <td>22800000.0</td>\n",
       "      <td>22900000.0</td>\n",
       "      <td>23000000.0</td>\n",
       "      <td>23100000.0</td>\n",
       "      <td>23000000.0</td>\n",
       "      <td>23000000.0</td>\n",
       "      <td>22900000.0</td>\n",
       "      <td>22600000.0</td>\n",
       "      <td>22100000.0</td>\n",
       "      <td>21700000.0</td>\n",
       "      <td>21300000.0</td>\n",
       "      <td>20900000.0</td>\n",
       "      <td>20500000.0</td>\n",
       "      <td>20100000.0</td>\n",
       "      <td>19900000.0</td>\n",
       "      <td>19800000.0</td>\n",
       "      <td>19700000.0</td>\n",
       "      <td>Total</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>23600000.0</td>\n",
       "      <td>23600000.0</td>\n",
       "      <td>23600000.0</td>\n",
       "      <td>23700000.0</td>\n",
       "      <td>23700000.0</td>\n",
       "      <td>23600000.0</td>\n",
       "      <td>23500000.0</td>\n",
       "      <td>23400000.0</td>\n",
       "      <td>23100000.0</td>\n",
       "      <td>22700000.0</td>\n",
       "      <td>22300000.0</td>\n",
       "      <td>22000000.0</td>\n",
       "      <td>21600000.0</td>\n",
       "      <td>21300000.0</td>\n",
       "      <td>20900000.0</td>\n",
       "      <td>20700000.0</td>\n",
       "      <td>20600000.0</td>\n",
       "      <td>20600000.0</td>\n",
       "      <td>Total</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2202761.0</td>\n",
       "      <td>2256693.0</td>\n",
       "      <td>2320612.0</td>\n",
       "      <td>2422766.0</td>\n",
       "      <td>2476593.0</td>\n",
       "      <td>2498449.0</td>\n",
       "      <td>2496689.0</td>\n",
       "      <td>2475417.0</td>\n",
       "      <td>2407250.0</td>\n",
       "      <td>2328886.0</td>\n",
       "      <td>2253357.0</td>\n",
       "      <td>2183846.0</td>\n",
       "      <td>2108614.0</td>\n",
       "      <td>2020072.0</td>\n",
       "      <td>1938556.0</td>\n",
       "      <td>1878252.0</td>\n",
       "      <td>1844327.0</td>\n",
       "      <td>1831654.0</td>\n",
       "      <td>De 0 a 4 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Male</td>\n",
       "      <td>1135064.0</td>\n",
       "      <td>1163218.0</td>\n",
       "      <td>1196688.0</td>\n",
       "      <td>1250262.0</td>\n",
       "      <td>1278206.0</td>\n",
       "      <td>1289347.0</td>\n",
       "      <td>1287318.0</td>\n",
       "      <td>1275459.0</td>\n",
       "      <td>1238752.0</td>\n",
       "      <td>1198022.0</td>\n",
       "      <td>1157999.0</td>\n",
       "      <td>1122869.0</td>\n",
       "      <td>1082941.0</td>\n",
       "      <td>1037489.0</td>\n",
       "      <td>994873.0</td>\n",
       "      <td>965495.0</td>\n",
       "      <td>948271.0</td>\n",
       "      <td>942603.0</td>\n",
       "      <td>De 0 a 4 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Female</td>\n",
       "      <td>1067698.0</td>\n",
       "      <td>1093474.0</td>\n",
       "      <td>1123924.0</td>\n",
       "      <td>1172504.0</td>\n",
       "      <td>1198387.0</td>\n",
       "      <td>1209101.0</td>\n",
       "      <td>1209371.0</td>\n",
       "      <td>1199959.0</td>\n",
       "      <td>1168497.0</td>\n",
       "      <td>1130864.0</td>\n",
       "      <td>1095358.0</td>\n",
       "      <td>1060977.0</td>\n",
       "      <td>1025673.0</td>\n",
       "      <td>982583.0</td>\n",
       "      <td>943683.0</td>\n",
       "      <td>912757.0</td>\n",
       "      <td>896056.0</td>\n",
       "      <td>889050.0</td>\n",
       "      <td>De 0 a 4 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2477204.0</td>\n",
       "      <td>2484376.0</td>\n",
       "      <td>2478498.0</td>\n",
       "      <td>2440531.0</td>\n",
       "      <td>2397810.0</td>\n",
       "      <td>2347840.0</td>\n",
       "      <td>2306649.0</td>\n",
       "      <td>2255150.0</td>\n",
       "      <td>2182624.0</td>\n",
       "      <td>2112170.0</td>\n",
       "      <td>2039809.0</td>\n",
       "      <td>1979492.0</td>\n",
       "      <td>1938863.0</td>\n",
       "      <td>1917161.0</td>\n",
       "      <td>1910397.0</td>\n",
       "      <td>1936053.0</td>\n",
       "      <td>1971390.0</td>\n",
       "      <td>2007748.0</td>\n",
       "      <td>De 5 a 9 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Male</td>\n",
       "      <td>1278835.0</td>\n",
       "      <td>1281689.0</td>\n",
       "      <td>1277953.0</td>\n",
       "      <td>1256481.0</td>\n",
       "      <td>1233542.0</td>\n",
       "      <td>1206431.0</td>\n",
       "      <td>1185937.0</td>\n",
       "      <td>1158304.0</td>\n",
       "      <td>1121399.0</td>\n",
       "      <td>1084534.0</td>\n",
       "      <td>1047667.0</td>\n",
       "      <td>1016029.0</td>\n",
       "      <td>995653.0</td>\n",
       "      <td>984218.0</td>\n",
       "      <td>980573.0</td>\n",
       "      <td>994870.0</td>\n",
       "      <td>1013325.0</td>\n",
       "      <td>1032150.0</td>\n",
       "      <td>De 5 a 9 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Female</td>\n",
       "      <td>1198369.0</td>\n",
       "      <td>1202687.0</td>\n",
       "      <td>1200545.0</td>\n",
       "      <td>1184050.0</td>\n",
       "      <td>1164268.0</td>\n",
       "      <td>1141409.0</td>\n",
       "      <td>1120712.0</td>\n",
       "      <td>1096845.0</td>\n",
       "      <td>1061225.0</td>\n",
       "      <td>1027636.0</td>\n",
       "      <td>992142.0</td>\n",
       "      <td>963463.0</td>\n",
       "      <td>943210.0</td>\n",
       "      <td>932944.0</td>\n",
       "      <td>929824.0</td>\n",
       "      <td>941183.0</td>\n",
       "      <td>958065.0</td>\n",
       "      <td>975598.0</td>\n",
       "      <td>De 5 a 9 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2345436.0</td>\n",
       "      <td>2308009.0</td>\n",
       "      <td>2267843.0</td>\n",
       "      <td>2226702.0</td>\n",
       "      <td>2202538.0</td>\n",
       "      <td>2167410.0</td>\n",
       "      <td>2130454.0</td>\n",
       "      <td>2104756.0</td>\n",
       "      <td>2092497.0</td>\n",
       "      <td>2084731.0</td>\n",
       "      <td>2087104.0</td>\n",
       "      <td>2098365.0</td>\n",
       "      <td>2116223.0</td>\n",
       "      <td>2115984.0</td>\n",
       "      <td>2104084.0</td>\n",
       "      <td>2130255.0</td>\n",
       "      <td>2175456.0</td>\n",
       "      <td>2233747.0</td>\n",
       "      <td>De 10 a 14 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Male</td>\n",
       "      <td>1205603.0</td>\n",
       "      <td>1187484.0</td>\n",
       "      <td>1165624.0</td>\n",
       "      <td>1146097.0</td>\n",
       "      <td>1133020.0</td>\n",
       "      <td>1114535.0</td>\n",
       "      <td>1094596.0</td>\n",
       "      <td>1081842.0</td>\n",
       "      <td>1074926.0</td>\n",
       "      <td>1070959.0</td>\n",
       "      <td>1073227.0</td>\n",
       "      <td>1078737.0</td>\n",
       "      <td>1087600.0</td>\n",
       "      <td>1087128.0</td>\n",
       "      <td>1081364.0</td>\n",
       "      <td>1093998.0</td>\n",
       "      <td>1117004.0</td>\n",
       "      <td>1146789.0</td>\n",
       "      <td>De 10 a 14 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Female</td>\n",
       "      <td>1139833.0</td>\n",
       "      <td>1120525.0</td>\n",
       "      <td>1102219.0</td>\n",
       "      <td>1080605.0</td>\n",
       "      <td>1069518.0</td>\n",
       "      <td>1052875.0</td>\n",
       "      <td>1035857.0</td>\n",
       "      <td>1022914.0</td>\n",
       "      <td>1017571.0</td>\n",
       "      <td>1013772.0</td>\n",
       "      <td>1013877.0</td>\n",
       "      <td>1019627.0</td>\n",
       "      <td>1028623.0</td>\n",
       "      <td>1028856.0</td>\n",
       "      <td>1022721.0</td>\n",
       "      <td>1036257.0</td>\n",
       "      <td>1058452.0</td>\n",
       "      <td>1086958.0</td>\n",
       "      <td>De 10 a 14 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2185630.0</td>\n",
       "      <td>2153295.0</td>\n",
       "      <td>2140570.0</td>\n",
       "      <td>2165609.0</td>\n",
       "      <td>2199412.0</td>\n",
       "      <td>2228087.0</td>\n",
       "      <td>2264337.0</td>\n",
       "      <td>2303352.0</td>\n",
       "      <td>2319627.0</td>\n",
       "      <td>2303354.0</td>\n",
       "      <td>2308988.0</td>\n",
       "      <td>2331217.0</td>\n",
       "      <td>2363147.0</td>\n",
       "      <td>2402092.0</td>\n",
       "      <td>2460959.0</td>\n",
       "      <td>2564645.0</td>\n",
       "      <td>2689804.0</td>\n",
       "      <td>2816145.0</td>\n",
       "      <td>De 15 a 19 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Male</td>\n",
       "      <td>1125439.0</td>\n",
       "      <td>1107969.0</td>\n",
       "      <td>1102242.0</td>\n",
       "      <td>1114479.0</td>\n",
       "      <td>1132171.0</td>\n",
       "      <td>1148567.0</td>\n",
       "      <td>1167074.0</td>\n",
       "      <td>1186636.0</td>\n",
       "      <td>1194200.0</td>\n",
       "      <td>1185114.0</td>\n",
       "      <td>1186822.0</td>\n",
       "      <td>1197781.0</td>\n",
       "      <td>1213125.0</td>\n",
       "      <td>1232596.0</td>\n",
       "      <td>1261909.0</td>\n",
       "      <td>1315031.0</td>\n",
       "      <td>1378189.0</td>\n",
       "      <td>1441913.0</td>\n",
       "      <td>De 15 a 19 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Female</td>\n",
       "      <td>1060191.0</td>\n",
       "      <td>1045326.0</td>\n",
       "      <td>1038329.0</td>\n",
       "      <td>1051130.0</td>\n",
       "      <td>1067241.0</td>\n",
       "      <td>1079519.0</td>\n",
       "      <td>1097262.0</td>\n",
       "      <td>1116716.0</td>\n",
       "      <td>1125427.0</td>\n",
       "      <td>1118239.0</td>\n",
       "      <td>1122166.0</td>\n",
       "      <td>1133437.0</td>\n",
       "      <td>1150023.0</td>\n",
       "      <td>1169497.0</td>\n",
       "      <td>1199049.0</td>\n",
       "      <td>1249614.0</td>\n",
       "      <td>1311614.0</td>\n",
       "      <td>1374232.0</td>\n",
       "      <td>De 15 a 19 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2280631.0</td>\n",
       "      <td>2319300.0</td>\n",
       "      <td>2374617.0</td>\n",
       "      <td>2443635.0</td>\n",
       "      <td>2503813.0</td>\n",
       "      <td>2568267.0</td>\n",
       "      <td>2654032.0</td>\n",
       "      <td>2750801.0</td>\n",
       "      <td>2813361.0</td>\n",
       "      <td>2842513.0</td>\n",
       "      <td>2906066.0</td>\n",
       "      <td>2986661.0</td>\n",
       "      <td>3058030.0</td>\n",
       "      <td>3144913.0</td>\n",
       "      <td>3188622.0</td>\n",
       "      <td>3283145.0</td>\n",
       "      <td>3367508.0</td>\n",
       "      <td>3423838.0</td>\n",
       "      <td>De 20 a 24 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Male</td>\n",
       "      <td>1163626.0</td>\n",
       "      <td>1181541.0</td>\n",
       "      <td>1207761.0</td>\n",
       "      <td>1241695.0</td>\n",
       "      <td>1272416.0</td>\n",
       "      <td>1305493.0</td>\n",
       "      <td>1351382.0</td>\n",
       "      <td>1404821.0</td>\n",
       "      <td>1438975.0</td>\n",
       "      <td>1452959.0</td>\n",
       "      <td>1489370.0</td>\n",
       "      <td>1530883.0</td>\n",
       "      <td>1565196.0</td>\n",
       "      <td>1611233.0</td>\n",
       "      <td>1633173.0</td>\n",
       "      <td>1679401.0</td>\n",
       "      <td>1723209.0</td>\n",
       "      <td>1751418.0</td>\n",
       "      <td>De 20 a 24 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Female</td>\n",
       "      <td>1117005.0</td>\n",
       "      <td>1137759.0</td>\n",
       "      <td>1166856.0</td>\n",
       "      <td>1201940.0</td>\n",
       "      <td>1231397.0</td>\n",
       "      <td>1262774.0</td>\n",
       "      <td>1302650.0</td>\n",
       "      <td>1345981.0</td>\n",
       "      <td>1374386.0</td>\n",
       "      <td>1389554.0</td>\n",
       "      <td>1416696.0</td>\n",
       "      <td>1455778.0</td>\n",
       "      <td>1492834.0</td>\n",
       "      <td>1533680.0</td>\n",
       "      <td>1555449.0</td>\n",
       "      <td>1603744.0</td>\n",
       "      <td>1644300.0</td>\n",
       "      <td>1672420.0</td>\n",
       "      <td>De 20 a 24 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2564166.0</td>\n",
       "      <td>2640339.0</td>\n",
       "      <td>2749308.0</td>\n",
       "      <td>2899633.0</td>\n",
       "      <td>3065914.0</td>\n",
       "      <td>3225924.0</td>\n",
       "      <td>3402286.0</td>\n",
       "      <td>3566229.0</td>\n",
       "      <td>3686182.0</td>\n",
       "      <td>3718522.0</td>\n",
       "      <td>3757856.0</td>\n",
       "      <td>3759735.0</td>\n",
       "      <td>3722160.0</td>\n",
       "      <td>3642256.0</td>\n",
       "      <td>3531345.0</td>\n",
       "      <td>3468272.0</td>\n",
       "      <td>3426133.0</td>\n",
       "      <td>3383291.0</td>\n",
       "      <td>De 25 a 29 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Male</td>\n",
       "      <td>1284351.0</td>\n",
       "      <td>1321886.0</td>\n",
       "      <td>1376954.0</td>\n",
       "      <td>1456220.0</td>\n",
       "      <td>1547932.0</td>\n",
       "      <td>1639319.0</td>\n",
       "      <td>1739466.0</td>\n",
       "      <td>1833854.0</td>\n",
       "      <td>1901996.0</td>\n",
       "      <td>1918799.0</td>\n",
       "      <td>1940982.0</td>\n",
       "      <td>1940189.0</td>\n",
       "      <td>1914797.0</td>\n",
       "      <td>1870480.0</td>\n",
       "      <td>1805964.0</td>\n",
       "      <td>1771122.0</td>\n",
       "      <td>1748871.0</td>\n",
       "      <td>1726478.0</td>\n",
       "      <td>De 25 a 29 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Female</td>\n",
       "      <td>1279815.0</td>\n",
       "      <td>1318453.0</td>\n",
       "      <td>1372353.0</td>\n",
       "      <td>1443413.0</td>\n",
       "      <td>1517982.0</td>\n",
       "      <td>1586605.0</td>\n",
       "      <td>1662819.0</td>\n",
       "      <td>1732376.0</td>\n",
       "      <td>1784186.0</td>\n",
       "      <td>1799723.0</td>\n",
       "      <td>1816874.0</td>\n",
       "      <td>1819545.0</td>\n",
       "      <td>1807363.0</td>\n",
       "      <td>1771776.0</td>\n",
       "      <td>1725381.0</td>\n",
       "      <td>1697150.0</td>\n",
       "      <td>1677262.0</td>\n",
       "      <td>1656813.0</td>\n",
       "      <td>De 25 a 29 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>3100404.0</td>\n",
       "      <td>3269864.0</td>\n",
       "      <td>3456208.0</td>\n",
       "      <td>3684777.0</td>\n",
       "      <td>3869456.0</td>\n",
       "      <td>4008885.0</td>\n",
       "      <td>4099015.0</td>\n",
       "      <td>4148571.0</td>\n",
       "      <td>4095385.0</td>\n",
       "      <td>3985376.0</td>\n",
       "      <td>3866461.0</td>\n",
       "      <td>3746923.0</td>\n",
       "      <td>3620011.0</td>\n",
       "      <td>3514014.0</td>\n",
       "      <td>3404172.0</td>\n",
       "      <td>3356504.0</td>\n",
       "      <td>3333746.0</td>\n",
       "      <td>3327012.0</td>\n",
       "      <td>De 30 a 34 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Male</td>\n",
       "      <td>1551405.0</td>\n",
       "      <td>1642803.0</td>\n",
       "      <td>1744291.0</td>\n",
       "      <td>1873020.0</td>\n",
       "      <td>1981933.0</td>\n",
       "      <td>2063850.0</td>\n",
       "      <td>2120014.0</td>\n",
       "      <td>2154043.0</td>\n",
       "      <td>2127521.0</td>\n",
       "      <td>2065247.0</td>\n",
       "      <td>2001350.0</td>\n",
       "      <td>1933425.0</td>\n",
       "      <td>1859149.0</td>\n",
       "      <td>1797550.0</td>\n",
       "      <td>1731464.0</td>\n",
       "      <td>1702765.0</td>\n",
       "      <td>1687747.0</td>\n",
       "      <td>1681457.0</td>\n",
       "      <td>De 30 a 34 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Female</td>\n",
       "      <td>1548999.0</td>\n",
       "      <td>1627061.0</td>\n",
       "      <td>1711917.0</td>\n",
       "      <td>1811757.0</td>\n",
       "      <td>1887523.0</td>\n",
       "      <td>1945035.0</td>\n",
       "      <td>1979001.0</td>\n",
       "      <td>1994528.0</td>\n",
       "      <td>1967864.0</td>\n",
       "      <td>1920129.0</td>\n",
       "      <td>1865111.0</td>\n",
       "      <td>1813498.0</td>\n",
       "      <td>1760862.0</td>\n",
       "      <td>1716463.0</td>\n",
       "      <td>1672709.0</td>\n",
       "      <td>1653739.0</td>\n",
       "      <td>1645999.0</td>\n",
       "      <td>1645555.0</td>\n",
       "      <td>De 30 a 34 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>3849019.0</td>\n",
       "      <td>3949790.0</td>\n",
       "      <td>4032770.0</td>\n",
       "      <td>4077122.0</td>\n",
       "      <td>4091219.0</td>\n",
       "      <td>4049368.0</td>\n",
       "      <td>3998273.0</td>\n",
       "      <td>3937312.0</td>\n",
       "      <td>3861341.0</td>\n",
       "      <td>3756271.0</td>\n",
       "      <td>3664445.0</td>\n",
       "      <td>3581131.0</td>\n",
       "      <td>3516089.0</td>\n",
       "      <td>3431384.0</td>\n",
       "      <td>3314867.0</td>\n",
       "      <td>3235862.0</td>\n",
       "      <td>3180387.0</td>\n",
       "      <td>3098212.0</td>\n",
       "      <td>De 35 a 39 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Male</td>\n",
       "      <td>1951416.0</td>\n",
       "      <td>2011297.0</td>\n",
       "      <td>2062085.0</td>\n",
       "      <td>2093321.0</td>\n",
       "      <td>2107351.0</td>\n",
       "      <td>2090009.0</td>\n",
       "      <td>2066006.0</td>\n",
       "      <td>2035595.0</td>\n",
       "      <td>1993955.0</td>\n",
       "      <td>1931101.0</td>\n",
       "      <td>1878353.0</td>\n",
       "      <td>1826067.0</td>\n",
       "      <td>1783898.0</td>\n",
       "      <td>1734596.0</td>\n",
       "      <td>1668855.0</td>\n",
       "      <td>1625229.0</td>\n",
       "      <td>1595879.0</td>\n",
       "      <td>1553397.0</td>\n",
       "      <td>De 35 a 39 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Female</td>\n",
       "      <td>1897603.0</td>\n",
       "      <td>1938493.0</td>\n",
       "      <td>1970685.0</td>\n",
       "      <td>1983801.0</td>\n",
       "      <td>1983868.0</td>\n",
       "      <td>1959359.0</td>\n",
       "      <td>1932267.0</td>\n",
       "      <td>1901717.0</td>\n",
       "      <td>1867386.0</td>\n",
       "      <td>1825169.0</td>\n",
       "      <td>1786092.0</td>\n",
       "      <td>1755064.0</td>\n",
       "      <td>1732192.0</td>\n",
       "      <td>1696787.0</td>\n",
       "      <td>1646012.0</td>\n",
       "      <td>1610633.0</td>\n",
       "      <td>1584508.0</td>\n",
       "      <td>1544816.0</td>\n",
       "      <td>De 35 a 39 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>3924814.0</td>\n",
       "      <td>3889668.0</td>\n",
       "      <td>3858819.0</td>\n",
       "      <td>3854669.0</td>\n",
       "      <td>3846087.0</td>\n",
       "      <td>3808223.0</td>\n",
       "      <td>3771058.0</td>\n",
       "      <td>3748719.0</td>\n",
       "      <td>3675330.0</td>\n",
       "      <td>3556310.0</td>\n",
       "      <td>3450889.0</td>\n",
       "      <td>3358470.0</td>\n",
       "      <td>3238107.0</td>\n",
       "      <td>3142953.0</td>\n",
       "      <td>3053248.0</td>\n",
       "      <td>2963359.0</td>\n",
       "      <td>2863606.0</td>\n",
       "      <td>2759246.0</td>\n",
       "      <td>De 40 a 44 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Male</td>\n",
       "      <td>1998599.0</td>\n",
       "      <td>1982454.0</td>\n",
       "      <td>1968429.0</td>\n",
       "      <td>1968657.0</td>\n",
       "      <td>1965303.0</td>\n",
       "      <td>1945444.0</td>\n",
       "      <td>1923379.0</td>\n",
       "      <td>1910127.0</td>\n",
       "      <td>1868745.0</td>\n",
       "      <td>1802575.0</td>\n",
       "      <td>1743864.0</td>\n",
       "      <td>1692347.0</td>\n",
       "      <td>1626387.0</td>\n",
       "      <td>1574149.0</td>\n",
       "      <td>1524691.0</td>\n",
       "      <td>1478949.0</td>\n",
       "      <td>1428887.0</td>\n",
       "      <td>1376202.0</td>\n",
       "      <td>De 40 a 44 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>Female</td>\n",
       "      <td>1926214.0</td>\n",
       "      <td>1907214.0</td>\n",
       "      <td>1890390.0</td>\n",
       "      <td>1886012.0</td>\n",
       "      <td>1880784.0</td>\n",
       "      <td>1862778.0</td>\n",
       "      <td>1847678.0</td>\n",
       "      <td>1838592.0</td>\n",
       "      <td>1806585.0</td>\n",
       "      <td>1753735.0</td>\n",
       "      <td>1707024.0</td>\n",
       "      <td>1666123.0</td>\n",
       "      <td>1611720.0</td>\n",
       "      <td>1568804.0</td>\n",
       "      <td>1528557.0</td>\n",
       "      <td>1484410.0</td>\n",
       "      <td>1434719.0</td>\n",
       "      <td>1383044.0</td>\n",
       "      <td>De 40 a 44 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>3712893.0</td>\n",
       "      <td>3691008.0</td>\n",
       "      <td>3689866.0</td>\n",
       "      <td>3668177.0</td>\n",
       "      <td>3610982.0</td>\n",
       "      <td>3541523.0</td>\n",
       "      <td>3480003.0</td>\n",
       "      <td>3389584.0</td>\n",
       "      <td>3307260.0</td>\n",
       "      <td>3215987.0</td>\n",
       "      <td>3107603.0</td>\n",
       "      <td>2981319.0</td>\n",
       "      <td>2848188.0</td>\n",
       "      <td>2733994.0</td>\n",
       "      <td>2631720.0</td>\n",
       "      <td>2553304.0</td>\n",
       "      <td>2489824.0</td>\n",
       "      <td>2470892.0</td>\n",
       "      <td>De 45 a 49 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>Male</td>\n",
       "      <td>1874517.0</td>\n",
       "      <td>1861331.0</td>\n",
       "      <td>1859982.0</td>\n",
       "      <td>1849194.0</td>\n",
       "      <td>1820735.0</td>\n",
       "      <td>1783445.0</td>\n",
       "      <td>1751653.0</td>\n",
       "      <td>1704782.0</td>\n",
       "      <td>1660695.0</td>\n",
       "      <td>1610907.0</td>\n",
       "      <td>1554623.0</td>\n",
       "      <td>1489062.0</td>\n",
       "      <td>1419602.0</td>\n",
       "      <td>1361374.0</td>\n",
       "      <td>1310360.0</td>\n",
       "      <td>1271512.0</td>\n",
       "      <td>1240741.0</td>\n",
       "      <td>1231006.0</td>\n",
       "      <td>De 45 a 49 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Female</td>\n",
       "      <td>1838377.0</td>\n",
       "      <td>1829678.0</td>\n",
       "      <td>1829884.0</td>\n",
       "      <td>1818983.0</td>\n",
       "      <td>1790246.0</td>\n",
       "      <td>1758078.0</td>\n",
       "      <td>1728350.0</td>\n",
       "      <td>1684802.0</td>\n",
       "      <td>1646565.0</td>\n",
       "      <td>1605080.0</td>\n",
       "      <td>1552980.0</td>\n",
       "      <td>1492256.0</td>\n",
       "      <td>1428585.0</td>\n",
       "      <td>1372620.0</td>\n",
       "      <td>1321360.0</td>\n",
       "      <td>1281793.0</td>\n",
       "      <td>1249083.0</td>\n",
       "      <td>1239886.0</td>\n",
       "      <td>De 45 a 49 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>3461060.0</td>\n",
       "      <td>3408997.0</td>\n",
       "      <td>3333372.0</td>\n",
       "      <td>3284958.0</td>\n",
       "      <td>3238287.0</td>\n",
       "      <td>3154524.0</td>\n",
       "      <td>3049953.0</td>\n",
       "      <td>2937166.0</td>\n",
       "      <td>2831513.0</td>\n",
       "      <td>2727507.0</td>\n",
       "      <td>2635663.0</td>\n",
       "      <td>2552773.0</td>\n",
       "      <td>2514061.0</td>\n",
       "      <td>2500758.0</td>\n",
       "      <td>2443558.0</td>\n",
       "      <td>2412496.0</td>\n",
       "      <td>2423346.0</td>\n",
       "      <td>2390357.0</td>\n",
       "      <td>De 50 a 54 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>Male</td>\n",
       "      <td>1725132.0</td>\n",
       "      <td>1698889.0</td>\n",
       "      <td>1660862.0</td>\n",
       "      <td>1636316.0</td>\n",
       "      <td>1613015.0</td>\n",
       "      <td>1570932.0</td>\n",
       "      <td>1517996.0</td>\n",
       "      <td>1459936.0</td>\n",
       "      <td>1406695.0</td>\n",
       "      <td>1354496.0</td>\n",
       "      <td>1308290.0</td>\n",
       "      <td>1266571.0</td>\n",
       "      <td>1246299.0</td>\n",
       "      <td>1238249.0</td>\n",
       "      <td>1208139.0</td>\n",
       "      <td>1191447.0</td>\n",
       "      <td>1195176.0</td>\n",
       "      <td>1178744.0</td>\n",
       "      <td>De 50 a 54 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Female</td>\n",
       "      <td>1735928.0</td>\n",
       "      <td>1710108.0</td>\n",
       "      <td>1672509.0</td>\n",
       "      <td>1648642.0</td>\n",
       "      <td>1625272.0</td>\n",
       "      <td>1583592.0</td>\n",
       "      <td>1531957.0</td>\n",
       "      <td>1477230.0</td>\n",
       "      <td>1424818.0</td>\n",
       "      <td>1373011.0</td>\n",
       "      <td>1327372.0</td>\n",
       "      <td>1286202.0</td>\n",
       "      <td>1267763.0</td>\n",
       "      <td>1262509.0</td>\n",
       "      <td>1235419.0</td>\n",
       "      <td>1221049.0</td>\n",
       "      <td>1228170.0</td>\n",
       "      <td>1211613.0</td>\n",
       "      <td>De 50 a 54 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>3073611.0</td>\n",
       "      <td>2978374.0</td>\n",
       "      <td>2877803.0</td>\n",
       "      <td>2794943.0</td>\n",
       "      <td>2720823.0</td>\n",
       "      <td>2645891.0</td>\n",
       "      <td>2578225.0</td>\n",
       "      <td>2555046.0</td>\n",
       "      <td>2550183.0</td>\n",
       "      <td>2495179.0</td>\n",
       "      <td>2455237.0</td>\n",
       "      <td>2449833.0</td>\n",
       "      <td>2400402.0</td>\n",
       "      <td>2324148.0</td>\n",
       "      <td>2233399.0</td>\n",
       "      <td>2142935.0</td>\n",
       "      <td>2119782.0</td>\n",
       "      <td>1971326.0</td>\n",
       "      <td>De 55 a 59 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Male</td>\n",
       "      <td>1514132.0</td>\n",
       "      <td>1467132.0</td>\n",
       "      <td>1416520.0</td>\n",
       "      <td>1375659.0</td>\n",
       "      <td>1340832.0</td>\n",
       "      <td>1303616.0</td>\n",
       "      <td>1269788.0</td>\n",
       "      <td>1257868.0</td>\n",
       "      <td>1253595.0</td>\n",
       "      <td>1224184.0</td>\n",
       "      <td>1202816.0</td>\n",
       "      <td>1198137.0</td>\n",
       "      <td>1173137.0</td>\n",
       "      <td>1135943.0</td>\n",
       "      <td>1091330.0</td>\n",
       "      <td>1048688.0</td>\n",
       "      <td>1037772.0</td>\n",
       "      <td>964063.0</td>\n",
       "      <td>De 55 a 59 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Female</td>\n",
       "      <td>1559480.0</td>\n",
       "      <td>1511242.0</td>\n",
       "      <td>1461283.0</td>\n",
       "      <td>1419284.0</td>\n",
       "      <td>1379991.0</td>\n",
       "      <td>1342275.0</td>\n",
       "      <td>1308437.0</td>\n",
       "      <td>1297179.0</td>\n",
       "      <td>1296588.0</td>\n",
       "      <td>1270995.0</td>\n",
       "      <td>1252421.0</td>\n",
       "      <td>1251696.0</td>\n",
       "      <td>1227265.0</td>\n",
       "      <td>1188205.0</td>\n",
       "      <td>1142069.0</td>\n",
       "      <td>1094247.0</td>\n",
       "      <td>1082010.0</td>\n",
       "      <td>1007263.0</td>\n",
       "      <td>De 55 a 59 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2568305.0</td>\n",
       "      <td>2507836.0</td>\n",
       "      <td>2491892.0</td>\n",
       "      <td>2502289.0</td>\n",
       "      <td>2467243.0</td>\n",
       "      <td>2439789.0</td>\n",
       "      <td>2445247.0</td>\n",
       "      <td>2409201.0</td>\n",
       "      <td>2340094.0</td>\n",
       "      <td>2250695.0</td>\n",
       "      <td>2152341.0</td>\n",
       "      <td>2116687.0</td>\n",
       "      <td>1956883.0</td>\n",
       "      <td>1845269.0</td>\n",
       "      <td>1839797.0</td>\n",
       "      <td>1913810.0</td>\n",
       "      <td>1893180.0</td>\n",
       "      <td>2024332.0</td>\n",
       "      <td>De 60 a 64 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Male</td>\n",
       "      <td>1248590.0</td>\n",
       "      <td>1219621.0</td>\n",
       "      <td>1211425.0</td>\n",
       "      <td>1215561.0</td>\n",
       "      <td>1197145.0</td>\n",
       "      <td>1181936.0</td>\n",
       "      <td>1182524.0</td>\n",
       "      <td>1164486.0</td>\n",
       "      <td>1130268.0</td>\n",
       "      <td>1086760.0</td>\n",
       "      <td>1040351.0</td>\n",
       "      <td>1022619.0</td>\n",
       "      <td>943568.0</td>\n",
       "      <td>887495.0</td>\n",
       "      <td>882826.0</td>\n",
       "      <td>913276.0</td>\n",
       "      <td>900966.0</td>\n",
       "      <td>964484.0</td>\n",
       "      <td>De 60 a 64 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>Female</td>\n",
       "      <td>1319715.0</td>\n",
       "      <td>1288216.0</td>\n",
       "      <td>1280468.0</td>\n",
       "      <td>1286727.0</td>\n",
       "      <td>1270097.0</td>\n",
       "      <td>1257853.0</td>\n",
       "      <td>1262723.0</td>\n",
       "      <td>1244715.0</td>\n",
       "      <td>1209826.0</td>\n",
       "      <td>1163935.0</td>\n",
       "      <td>1111990.0</td>\n",
       "      <td>1094068.0</td>\n",
       "      <td>1013315.0</td>\n",
       "      <td>957774.0</td>\n",
       "      <td>956971.0</td>\n",
       "      <td>1000534.0</td>\n",
       "      <td>992214.0</td>\n",
       "      <td>1059848.0</td>\n",
       "      <td>De 60 a 64 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2348133.0</td>\n",
       "      <td>2357513.0</td>\n",
       "      <td>2327434.0</td>\n",
       "      <td>2268894.0</td>\n",
       "      <td>2192459.0</td>\n",
       "      <td>2103622.0</td>\n",
       "      <td>2074945.0</td>\n",
       "      <td>1925904.0</td>\n",
       "      <td>1820845.0</td>\n",
       "      <td>1814781.0</td>\n",
       "      <td>1877273.0</td>\n",
       "      <td>1845266.0</td>\n",
       "      <td>1960789.0</td>\n",
       "      <td>2050582.0</td>\n",
       "      <td>2094704.0</td>\n",
       "      <td>2081614.0</td>\n",
       "      <td>2090117.0</td>\n",
       "      <td>2079981.0</td>\n",
       "      <td>De 65 a 69 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>Male</td>\n",
       "      <td>1117039.0</td>\n",
       "      <td>1120627.0</td>\n",
       "      <td>1106690.0</td>\n",
       "      <td>1078146.0</td>\n",
       "      <td>1042214.0</td>\n",
       "      <td>1000843.0</td>\n",
       "      <td>986345.0</td>\n",
       "      <td>913809.0</td>\n",
       "      <td>861611.0</td>\n",
       "      <td>855931.0</td>\n",
       "      <td>879448.0</td>\n",
       "      <td>861065.0</td>\n",
       "      <td>915059.0</td>\n",
       "      <td>956503.0</td>\n",
       "      <td>976058.0</td>\n",
       "      <td>972144.0</td>\n",
       "      <td>974245.0</td>\n",
       "      <td>968726.0</td>\n",
       "      <td>De 65 a 69 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>Female</td>\n",
       "      <td>1231094.0</td>\n",
       "      <td>1236887.0</td>\n",
       "      <td>1220744.0</td>\n",
       "      <td>1190748.0</td>\n",
       "      <td>1150245.0</td>\n",
       "      <td>1102779.0</td>\n",
       "      <td>1088600.0</td>\n",
       "      <td>1012095.0</td>\n",
       "      <td>959233.0</td>\n",
       "      <td>958850.0</td>\n",
       "      <td>997825.0</td>\n",
       "      <td>984201.0</td>\n",
       "      <td>1045730.0</td>\n",
       "      <td>1094079.0</td>\n",
       "      <td>1118646.0</td>\n",
       "      <td>1109470.0</td>\n",
       "      <td>1115872.0</td>\n",
       "      <td>1111255.0</td>\n",
       "      <td>De 65 a 69 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>1975727.0</td>\n",
       "      <td>1949028.0</td>\n",
       "      <td>1809958.0</td>\n",
       "      <td>1713640.0</td>\n",
       "      <td>1710594.0</td>\n",
       "      <td>1768963.0</td>\n",
       "      <td>1738573.0</td>\n",
       "      <td>1849427.0</td>\n",
       "      <td>1931744.0</td>\n",
       "      <td>1970605.0</td>\n",
       "      <td>1953117.0</td>\n",
       "      <td>1952886.0</td>\n",
       "      <td>1933356.0</td>\n",
       "      <td>1900278.0</td>\n",
       "      <td>1848743.0</td>\n",
       "      <td>1819853.0</td>\n",
       "      <td>1772621.0</td>\n",
       "      <td>1743525.0</td>\n",
       "      <td>De 70 a 74 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>Male</td>\n",
       "      <td>915285.0</td>\n",
       "      <td>902510.0</td>\n",
       "      <td>836505.0</td>\n",
       "      <td>789593.0</td>\n",
       "      <td>785328.0</td>\n",
       "      <td>806555.0</td>\n",
       "      <td>788678.0</td>\n",
       "      <td>838487.0</td>\n",
       "      <td>874190.0</td>\n",
       "      <td>890248.0</td>\n",
       "      <td>883053.0</td>\n",
       "      <td>880020.0</td>\n",
       "      <td>869084.0</td>\n",
       "      <td>851545.0</td>\n",
       "      <td>826514.0</td>\n",
       "      <td>810580.0</td>\n",
       "      <td>787553.0</td>\n",
       "      <td>772836.0</td>\n",
       "      <td>De 70 a 74 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>Female</td>\n",
       "      <td>1060442.0</td>\n",
       "      <td>1046518.0</td>\n",
       "      <td>973454.0</td>\n",
       "      <td>924047.0</td>\n",
       "      <td>925266.0</td>\n",
       "      <td>962409.0</td>\n",
       "      <td>949895.0</td>\n",
       "      <td>1010940.0</td>\n",
       "      <td>1057553.0</td>\n",
       "      <td>1080357.0</td>\n",
       "      <td>1070064.0</td>\n",
       "      <td>1072866.0</td>\n",
       "      <td>1064272.0</td>\n",
       "      <td>1048732.0</td>\n",
       "      <td>1022229.0</td>\n",
       "      <td>1009273.0</td>\n",
       "      <td>985068.0</td>\n",
       "      <td>970689.0</td>\n",
       "      <td>De 70 a 74 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>1584129.0</td>\n",
       "      <td>1553066.0</td>\n",
       "      <td>1652238.0</td>\n",
       "      <td>1726105.0</td>\n",
       "      <td>1760622.0</td>\n",
       "      <td>1743239.0</td>\n",
       "      <td>1737791.0</td>\n",
       "      <td>1717094.0</td>\n",
       "      <td>1682845.0</td>\n",
       "      <td>1632501.0</td>\n",
       "      <td>1598981.0</td>\n",
       "      <td>1550360.0</td>\n",
       "      <td>1514052.0</td>\n",
       "      <td>1472067.0</td>\n",
       "      <td>1448082.0</td>\n",
       "      <td>1403666.0</td>\n",
       "      <td>1363281.0</td>\n",
       "      <td>1298054.0</td>\n",
       "      <td>De 75 a 79 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>Male</td>\n",
       "      <td>690957.0</td>\n",
       "      <td>673645.0</td>\n",
       "      <td>716562.0</td>\n",
       "      <td>747103.0</td>\n",
       "      <td>760328.0</td>\n",
       "      <td>752522.0</td>\n",
       "      <td>746369.0</td>\n",
       "      <td>735046.0</td>\n",
       "      <td>716774.0</td>\n",
       "      <td>692372.0</td>\n",
       "      <td>673978.0</td>\n",
       "      <td>651198.0</td>\n",
       "      <td>633224.0</td>\n",
       "      <td>614881.0</td>\n",
       "      <td>601734.0</td>\n",
       "      <td>582816.0</td>\n",
       "      <td>562084.0</td>\n",
       "      <td>531889.0</td>\n",
       "      <td>De 75 a 79 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>Female</td>\n",
       "      <td>893172.0</td>\n",
       "      <td>879421.0</td>\n",
       "      <td>935676.0</td>\n",
       "      <td>979002.0</td>\n",
       "      <td>1000295.0</td>\n",
       "      <td>990717.0</td>\n",
       "      <td>991421.0</td>\n",
       "      <td>982049.0</td>\n",
       "      <td>966072.0</td>\n",
       "      <td>940129.0</td>\n",
       "      <td>925003.0</td>\n",
       "      <td>899162.0</td>\n",
       "      <td>880827.0</td>\n",
       "      <td>857186.0</td>\n",
       "      <td>846348.0</td>\n",
       "      <td>820850.0</td>\n",
       "      <td>801197.0</td>\n",
       "      <td>766165.0</td>\n",
       "      <td>De 75 a 79 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>1430780.0</td>\n",
       "      <td>1425565.0</td>\n",
       "      <td>1403260.0</td>\n",
       "      <td>1369207.0</td>\n",
       "      <td>1324628.0</td>\n",
       "      <td>1291221.0</td>\n",
       "      <td>1243185.0</td>\n",
       "      <td>1207917.0</td>\n",
       "      <td>1167722.0</td>\n",
       "      <td>1142986.0</td>\n",
       "      <td>1099544.0</td>\n",
       "      <td>1061778.0</td>\n",
       "      <td>1000755.0</td>\n",
       "      <td>947509.0</td>\n",
       "      <td>884323.0</td>\n",
       "      <td>835891.0</td>\n",
       "      <td>800628.0</td>\n",
       "      <td>796684.0</td>\n",
       "      <td>De 80 a 84 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>Male</td>\n",
       "      <td>578509.0</td>\n",
       "      <td>573317.0</td>\n",
       "      <td>561172.0</td>\n",
       "      <td>544043.0</td>\n",
       "      <td>523081.0</td>\n",
       "      <td>505463.0</td>\n",
       "      <td>483875.0</td>\n",
       "      <td>466388.0</td>\n",
       "      <td>448856.0</td>\n",
       "      <td>436125.0</td>\n",
       "      <td>418458.0</td>\n",
       "      <td>401185.0</td>\n",
       "      <td>375393.0</td>\n",
       "      <td>350155.0</td>\n",
       "      <td>323518.0</td>\n",
       "      <td>299129.0</td>\n",
       "      <td>284499.0</td>\n",
       "      <td>281937.0</td>\n",
       "      <td>De 80 a 84 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>Female</td>\n",
       "      <td>852271.0</td>\n",
       "      <td>852248.0</td>\n",
       "      <td>842088.0</td>\n",
       "      <td>825164.0</td>\n",
       "      <td>801547.0</td>\n",
       "      <td>785758.0</td>\n",
       "      <td>759310.0</td>\n",
       "      <td>741529.0</td>\n",
       "      <td>718867.0</td>\n",
       "      <td>706861.0</td>\n",
       "      <td>681087.0</td>\n",
       "      <td>660593.0</td>\n",
       "      <td>625363.0</td>\n",
       "      <td>597354.0</td>\n",
       "      <td>560805.0</td>\n",
       "      <td>536763.0</td>\n",
       "      <td>516129.0</td>\n",
       "      <td>514747.0</td>\n",
       "      <td>De 80 a 84 años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>10735.0</td>\n",
       "      <td>15479.0</td>\n",
       "      <td>13605.0</td>\n",
       "      <td>12086.0</td>\n",
       "      <td>10763.0</td>\n",
       "      <td>9289.0</td>\n",
       "      <td>7826.0</td>\n",
       "      <td>6896.0</td>\n",
       "      <td>6366.0</td>\n",
       "      <td>5735.0</td>\n",
       "      <td>5385.0</td>\n",
       "      <td>5065.0</td>\n",
       "      <td>4837.0</td>\n",
       "      <td>4721.0</td>\n",
       "      <td>4269.0</td>\n",
       "      <td>3087.0</td>\n",
       "      <td>1998.0</td>\n",
       "      <td>1842.0</td>\n",
       "      <td>100 y más años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>Male</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>3445.0</td>\n",
       "      <td>2969.0</td>\n",
       "      <td>2603.0</td>\n",
       "      <td>2210.0</td>\n",
       "      <td>1956.0</td>\n",
       "      <td>1703.0</td>\n",
       "      <td>1532.0</td>\n",
       "      <td>1442.0</td>\n",
       "      <td>1254.0</td>\n",
       "      <td>1224.0</td>\n",
       "      <td>1147.0</td>\n",
       "      <td>1119.0</td>\n",
       "      <td>1048.0</td>\n",
       "      <td>944.0</td>\n",
       "      <td>696.0</td>\n",
       "      <td>478.0</td>\n",
       "      <td>443.0</td>\n",
       "      <td>100 y más años</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Female</td>\n",
       "      <td>8935.0</td>\n",
       "      <td>12034.0</td>\n",
       "      <td>10636.0</td>\n",
       "      <td>9483.0</td>\n",
       "      <td>8553.0</td>\n",
       "      <td>7333.0</td>\n",
       "      <td>6123.0</td>\n",
       "      <td>5363.0</td>\n",
       "      <td>4924.0</td>\n",
       "      <td>4481.0</td>\n",
       "      <td>4161.0</td>\n",
       "      <td>3918.0</td>\n",
       "      <td>3718.0</td>\n",
       "      <td>3673.0</td>\n",
       "      <td>3324.0</td>\n",
       "      <td>2391.0</td>\n",
       "      <td>1520.0</td>\n",
       "      <td>1400.0</td>\n",
       "      <td>100 y más años</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Unnamed: 0        2016        2015        2014        2013        2012  \\\n",
       "1   Both Genders  46400000.0  46400000.0  46500000.0  46700000.0  46800000.0   \n",
       "2           Male  22800000.0  22800000.0  22900000.0  23000000.0  23100000.0   \n",
       "3         Female  23600000.0  23600000.0  23600000.0  23700000.0  23700000.0   \n",
       "5   Both Genders   2202761.0   2256693.0   2320612.0   2422766.0   2476593.0   \n",
       "6           Male   1135064.0   1163218.0   1196688.0   1250262.0   1278206.0   \n",
       "7         Female   1067698.0   1093474.0   1123924.0   1172504.0   1198387.0   \n",
       "9   Both Genders   2477204.0   2484376.0   2478498.0   2440531.0   2397810.0   \n",
       "10          Male   1278835.0   1281689.0   1277953.0   1256481.0   1233542.0   \n",
       "11        Female   1198369.0   1202687.0   1200545.0   1184050.0   1164268.0   \n",
       "13  Both Genders   2345436.0   2308009.0   2267843.0   2226702.0   2202538.0   \n",
       "14          Male   1205603.0   1187484.0   1165624.0   1146097.0   1133020.0   \n",
       "15        Female   1139833.0   1120525.0   1102219.0   1080605.0   1069518.0   \n",
       "17  Both Genders   2185630.0   2153295.0   2140570.0   2165609.0   2199412.0   \n",
       "18          Male   1125439.0   1107969.0   1102242.0   1114479.0   1132171.0   \n",
       "19        Female   1060191.0   1045326.0   1038329.0   1051130.0   1067241.0   \n",
       "21  Both Genders   2280631.0   2319300.0   2374617.0   2443635.0   2503813.0   \n",
       "22          Male   1163626.0   1181541.0   1207761.0   1241695.0   1272416.0   \n",
       "23        Female   1117005.0   1137759.0   1166856.0   1201940.0   1231397.0   \n",
       "25  Both Genders   2564166.0   2640339.0   2749308.0   2899633.0   3065914.0   \n",
       "26          Male   1284351.0   1321886.0   1376954.0   1456220.0   1547932.0   \n",
       "27        Female   1279815.0   1318453.0   1372353.0   1443413.0   1517982.0   \n",
       "29  Both Genders   3100404.0   3269864.0   3456208.0   3684777.0   3869456.0   \n",
       "30          Male   1551405.0   1642803.0   1744291.0   1873020.0   1981933.0   \n",
       "31        Female   1548999.0   1627061.0   1711917.0   1811757.0   1887523.0   \n",
       "33  Both Genders   3849019.0   3949790.0   4032770.0   4077122.0   4091219.0   \n",
       "34          Male   1951416.0   2011297.0   2062085.0   2093321.0   2107351.0   \n",
       "35        Female   1897603.0   1938493.0   1970685.0   1983801.0   1983868.0   \n",
       "37  Both Genders   3924814.0   3889668.0   3858819.0   3854669.0   3846087.0   \n",
       "38          Male   1998599.0   1982454.0   1968429.0   1968657.0   1965303.0   \n",
       "39        Female   1926214.0   1907214.0   1890390.0   1886012.0   1880784.0   \n",
       "41  Both Genders   3712893.0   3691008.0   3689866.0   3668177.0   3610982.0   \n",
       "42          Male   1874517.0   1861331.0   1859982.0   1849194.0   1820735.0   \n",
       "43        Female   1838377.0   1829678.0   1829884.0   1818983.0   1790246.0   \n",
       "45  Both Genders   3461060.0   3408997.0   3333372.0   3284958.0   3238287.0   \n",
       "46          Male   1725132.0   1698889.0   1660862.0   1636316.0   1613015.0   \n",
       "47        Female   1735928.0   1710108.0   1672509.0   1648642.0   1625272.0   \n",
       "49  Both Genders   3073611.0   2978374.0   2877803.0   2794943.0   2720823.0   \n",
       "50          Male   1514132.0   1467132.0   1416520.0   1375659.0   1340832.0   \n",
       "51        Female   1559480.0   1511242.0   1461283.0   1419284.0   1379991.0   \n",
       "53  Both Genders   2568305.0   2507836.0   2491892.0   2502289.0   2467243.0   \n",
       "54          Male   1248590.0   1219621.0   1211425.0   1215561.0   1197145.0   \n",
       "55        Female   1319715.0   1288216.0   1280468.0   1286727.0   1270097.0   \n",
       "57  Both Genders   2348133.0   2357513.0   2327434.0   2268894.0   2192459.0   \n",
       "58          Male   1117039.0   1120627.0   1106690.0   1078146.0   1042214.0   \n",
       "59        Female   1231094.0   1236887.0   1220744.0   1190748.0   1150245.0   \n",
       "61  Both Genders   1975727.0   1949028.0   1809958.0   1713640.0   1710594.0   \n",
       "62          Male    915285.0    902510.0    836505.0    789593.0    785328.0   \n",
       "63        Female   1060442.0   1046518.0    973454.0    924047.0    925266.0   \n",
       "65  Both Genders   1584129.0   1553066.0   1652238.0   1726105.0   1760622.0   \n",
       "66          Male    690957.0    673645.0    716562.0    747103.0    760328.0   \n",
       "67        Female    893172.0    879421.0    935676.0    979002.0   1000295.0   \n",
       "69  Both Genders   1430780.0   1425565.0   1403260.0   1369207.0   1324628.0   \n",
       "70          Male    578509.0    573317.0    561172.0    544043.0    523081.0   \n",
       "71        Female    852271.0    852248.0    842088.0    825164.0    801547.0   \n",
       "85  Both Genders     10735.0     15479.0     13605.0     12086.0     10763.0   \n",
       "86          Male      1800.0      3445.0      2969.0      2603.0      2210.0   \n",
       "87        Female      8935.0     12034.0     10636.0      9483.0      8553.0   \n",
       "\n",
       "          2011        2010        2009        2008        2007        2006  \\\n",
       "1   46700000.0  46500000.0  46200000.0  45700000.0  44800000.0  44000000.0   \n",
       "2   23000000.0  23000000.0  22900000.0  22600000.0  22100000.0  21700000.0   \n",
       "3   23600000.0  23500000.0  23400000.0  23100000.0  22700000.0  22300000.0   \n",
       "5    2498449.0   2496689.0   2475417.0   2407250.0   2328886.0   2253357.0   \n",
       "6    1289347.0   1287318.0   1275459.0   1238752.0   1198022.0   1157999.0   \n",
       "7    1209101.0   1209371.0   1199959.0   1168497.0   1130864.0   1095358.0   \n",
       "9    2347840.0   2306649.0   2255150.0   2182624.0   2112170.0   2039809.0   \n",
       "10   1206431.0   1185937.0   1158304.0   1121399.0   1084534.0   1047667.0   \n",
       "11   1141409.0   1120712.0   1096845.0   1061225.0   1027636.0    992142.0   \n",
       "13   2167410.0   2130454.0   2104756.0   2092497.0   2084731.0   2087104.0   \n",
       "14   1114535.0   1094596.0   1081842.0   1074926.0   1070959.0   1073227.0   \n",
       "15   1052875.0   1035857.0   1022914.0   1017571.0   1013772.0   1013877.0   \n",
       "17   2228087.0   2264337.0   2303352.0   2319627.0   2303354.0   2308988.0   \n",
       "18   1148567.0   1167074.0   1186636.0   1194200.0   1185114.0   1186822.0   \n",
       "19   1079519.0   1097262.0   1116716.0   1125427.0   1118239.0   1122166.0   \n",
       "21   2568267.0   2654032.0   2750801.0   2813361.0   2842513.0   2906066.0   \n",
       "22   1305493.0   1351382.0   1404821.0   1438975.0   1452959.0   1489370.0   \n",
       "23   1262774.0   1302650.0   1345981.0   1374386.0   1389554.0   1416696.0   \n",
       "25   3225924.0   3402286.0   3566229.0   3686182.0   3718522.0   3757856.0   \n",
       "26   1639319.0   1739466.0   1833854.0   1901996.0   1918799.0   1940982.0   \n",
       "27   1586605.0   1662819.0   1732376.0   1784186.0   1799723.0   1816874.0   \n",
       "29   4008885.0   4099015.0   4148571.0   4095385.0   3985376.0   3866461.0   \n",
       "30   2063850.0   2120014.0   2154043.0   2127521.0   2065247.0   2001350.0   \n",
       "31   1945035.0   1979001.0   1994528.0   1967864.0   1920129.0   1865111.0   \n",
       "33   4049368.0   3998273.0   3937312.0   3861341.0   3756271.0   3664445.0   \n",
       "34   2090009.0   2066006.0   2035595.0   1993955.0   1931101.0   1878353.0   \n",
       "35   1959359.0   1932267.0   1901717.0   1867386.0   1825169.0   1786092.0   \n",
       "37   3808223.0   3771058.0   3748719.0   3675330.0   3556310.0   3450889.0   \n",
       "38   1945444.0   1923379.0   1910127.0   1868745.0   1802575.0   1743864.0   \n",
       "39   1862778.0   1847678.0   1838592.0   1806585.0   1753735.0   1707024.0   \n",
       "41   3541523.0   3480003.0   3389584.0   3307260.0   3215987.0   3107603.0   \n",
       "42   1783445.0   1751653.0   1704782.0   1660695.0   1610907.0   1554623.0   \n",
       "43   1758078.0   1728350.0   1684802.0   1646565.0   1605080.0   1552980.0   \n",
       "45   3154524.0   3049953.0   2937166.0   2831513.0   2727507.0   2635663.0   \n",
       "46   1570932.0   1517996.0   1459936.0   1406695.0   1354496.0   1308290.0   \n",
       "47   1583592.0   1531957.0   1477230.0   1424818.0   1373011.0   1327372.0   \n",
       "49   2645891.0   2578225.0   2555046.0   2550183.0   2495179.0   2455237.0   \n",
       "50   1303616.0   1269788.0   1257868.0   1253595.0   1224184.0   1202816.0   \n",
       "51   1342275.0   1308437.0   1297179.0   1296588.0   1270995.0   1252421.0   \n",
       "53   2439789.0   2445247.0   2409201.0   2340094.0   2250695.0   2152341.0   \n",
       "54   1181936.0   1182524.0   1164486.0   1130268.0   1086760.0   1040351.0   \n",
       "55   1257853.0   1262723.0   1244715.0   1209826.0   1163935.0   1111990.0   \n",
       "57   2103622.0   2074945.0   1925904.0   1820845.0   1814781.0   1877273.0   \n",
       "58   1000843.0    986345.0    913809.0    861611.0    855931.0    879448.0   \n",
       "59   1102779.0   1088600.0   1012095.0    959233.0    958850.0    997825.0   \n",
       "61   1768963.0   1738573.0   1849427.0   1931744.0   1970605.0   1953117.0   \n",
       "62    806555.0    788678.0    838487.0    874190.0    890248.0    883053.0   \n",
       "63    962409.0    949895.0   1010940.0   1057553.0   1080357.0   1070064.0   \n",
       "65   1743239.0   1737791.0   1717094.0   1682845.0   1632501.0   1598981.0   \n",
       "66    752522.0    746369.0    735046.0    716774.0    692372.0    673978.0   \n",
       "67    990717.0    991421.0    982049.0    966072.0    940129.0    925003.0   \n",
       "69   1291221.0   1243185.0   1207917.0   1167722.0   1142986.0   1099544.0   \n",
       "70    505463.0    483875.0    466388.0    448856.0    436125.0    418458.0   \n",
       "71    785758.0    759310.0    741529.0    718867.0    706861.0    681087.0   \n",
       "85      9289.0      7826.0      6896.0      6366.0      5735.0      5385.0   \n",
       "86      1956.0      1703.0      1532.0      1442.0      1254.0      1224.0   \n",
       "87      7333.0      6123.0      5363.0      4924.0      4481.0      4161.0   \n",
       "\n",
       "          2005        2004        2003        2002        2001        2000  \\\n",
       "1   43300000.0  42500000.0  41800000.0  41000000.0  40700000.0  40500000.0   \n",
       "2   21300000.0  20900000.0  20500000.0  20100000.0  19900000.0  19800000.0   \n",
       "3   22000000.0  21600000.0  21300000.0  20900000.0  20700000.0  20600000.0   \n",
       "5    2183846.0   2108614.0   2020072.0   1938556.0   1878252.0   1844327.0   \n",
       "6    1122869.0   1082941.0   1037489.0    994873.0    965495.0    948271.0   \n",
       "7    1060977.0   1025673.0    982583.0    943683.0    912757.0    896056.0   \n",
       "9    1979492.0   1938863.0   1917161.0   1910397.0   1936053.0   1971390.0   \n",
       "10   1016029.0    995653.0    984218.0    980573.0    994870.0   1013325.0   \n",
       "11    963463.0    943210.0    932944.0    929824.0    941183.0    958065.0   \n",
       "13   2098365.0   2116223.0   2115984.0   2104084.0   2130255.0   2175456.0   \n",
       "14   1078737.0   1087600.0   1087128.0   1081364.0   1093998.0   1117004.0   \n",
       "15   1019627.0   1028623.0   1028856.0   1022721.0   1036257.0   1058452.0   \n",
       "17   2331217.0   2363147.0   2402092.0   2460959.0   2564645.0   2689804.0   \n",
       "18   1197781.0   1213125.0   1232596.0   1261909.0   1315031.0   1378189.0   \n",
       "19   1133437.0   1150023.0   1169497.0   1199049.0   1249614.0   1311614.0   \n",
       "21   2986661.0   3058030.0   3144913.0   3188622.0   3283145.0   3367508.0   \n",
       "22   1530883.0   1565196.0   1611233.0   1633173.0   1679401.0   1723209.0   \n",
       "23   1455778.0   1492834.0   1533680.0   1555449.0   1603744.0   1644300.0   \n",
       "25   3759735.0   3722160.0   3642256.0   3531345.0   3468272.0   3426133.0   \n",
       "26   1940189.0   1914797.0   1870480.0   1805964.0   1771122.0   1748871.0   \n",
       "27   1819545.0   1807363.0   1771776.0   1725381.0   1697150.0   1677262.0   \n",
       "29   3746923.0   3620011.0   3514014.0   3404172.0   3356504.0   3333746.0   \n",
       "30   1933425.0   1859149.0   1797550.0   1731464.0   1702765.0   1687747.0   \n",
       "31   1813498.0   1760862.0   1716463.0   1672709.0   1653739.0   1645999.0   \n",
       "33   3581131.0   3516089.0   3431384.0   3314867.0   3235862.0   3180387.0   \n",
       "34   1826067.0   1783898.0   1734596.0   1668855.0   1625229.0   1595879.0   \n",
       "35   1755064.0   1732192.0   1696787.0   1646012.0   1610633.0   1584508.0   \n",
       "37   3358470.0   3238107.0   3142953.0   3053248.0   2963359.0   2863606.0   \n",
       "38   1692347.0   1626387.0   1574149.0   1524691.0   1478949.0   1428887.0   \n",
       "39   1666123.0   1611720.0   1568804.0   1528557.0   1484410.0   1434719.0   \n",
       "41   2981319.0   2848188.0   2733994.0   2631720.0   2553304.0   2489824.0   \n",
       "42   1489062.0   1419602.0   1361374.0   1310360.0   1271512.0   1240741.0   \n",
       "43   1492256.0   1428585.0   1372620.0   1321360.0   1281793.0   1249083.0   \n",
       "45   2552773.0   2514061.0   2500758.0   2443558.0   2412496.0   2423346.0   \n",
       "46   1266571.0   1246299.0   1238249.0   1208139.0   1191447.0   1195176.0   \n",
       "47   1286202.0   1267763.0   1262509.0   1235419.0   1221049.0   1228170.0   \n",
       "49   2449833.0   2400402.0   2324148.0   2233399.0   2142935.0   2119782.0   \n",
       "50   1198137.0   1173137.0   1135943.0   1091330.0   1048688.0   1037772.0   \n",
       "51   1251696.0   1227265.0   1188205.0   1142069.0   1094247.0   1082010.0   \n",
       "53   2116687.0   1956883.0   1845269.0   1839797.0   1913810.0   1893180.0   \n",
       "54   1022619.0    943568.0    887495.0    882826.0    913276.0    900966.0   \n",
       "55   1094068.0   1013315.0    957774.0    956971.0   1000534.0    992214.0   \n",
       "57   1845266.0   1960789.0   2050582.0   2094704.0   2081614.0   2090117.0   \n",
       "58    861065.0    915059.0    956503.0    976058.0    972144.0    974245.0   \n",
       "59    984201.0   1045730.0   1094079.0   1118646.0   1109470.0   1115872.0   \n",
       "61   1952886.0   1933356.0   1900278.0   1848743.0   1819853.0   1772621.0   \n",
       "62    880020.0    869084.0    851545.0    826514.0    810580.0    787553.0   \n",
       "63   1072866.0   1064272.0   1048732.0   1022229.0   1009273.0    985068.0   \n",
       "65   1550360.0   1514052.0   1472067.0   1448082.0   1403666.0   1363281.0   \n",
       "66    651198.0    633224.0    614881.0    601734.0    582816.0    562084.0   \n",
       "67    899162.0    880827.0    857186.0    846348.0    820850.0    801197.0   \n",
       "69   1061778.0   1000755.0    947509.0    884323.0    835891.0    800628.0   \n",
       "70    401185.0    375393.0    350155.0    323518.0    299129.0    284499.0   \n",
       "71    660593.0    625363.0    597354.0    560805.0    536763.0    516129.0   \n",
       "85      5065.0      4837.0      4721.0      4269.0      3087.0      1998.0   \n",
       "86      1147.0      1119.0      1048.0       944.0       696.0       478.0   \n",
       "87      3918.0      3718.0      3673.0      3324.0      2391.0      1520.0   \n",
       "\n",
       "          1999              Age  \n",
       "1   40300000.0            Total  \n",
       "2   19700000.0            Total  \n",
       "3   20600000.0            Total  \n",
       "5    1831654.0    De 0 a 4 años  \n",
       "6     942603.0    De 0 a 4 años  \n",
       "7     889050.0    De 0 a 4 años  \n",
       "9    2007748.0    De 5 a 9 años  \n",
       "10   1032150.0    De 5 a 9 años  \n",
       "11    975598.0    De 5 a 9 años  \n",
       "13   2233747.0  De 10 a 14 años  \n",
       "14   1146789.0  De 10 a 14 años  \n",
       "15   1086958.0  De 10 a 14 años  \n",
       "17   2816145.0  De 15 a 19 años  \n",
       "18   1441913.0  De 15 a 19 años  \n",
       "19   1374232.0  De 15 a 19 años  \n",
       "21   3423838.0  De 20 a 24 años  \n",
       "22   1751418.0  De 20 a 24 años  \n",
       "23   1672420.0  De 20 a 24 años  \n",
       "25   3383291.0  De 25 a 29 años  \n",
       "26   1726478.0  De 25 a 29 años  \n",
       "27   1656813.0  De 25 a 29 años  \n",
       "29   3327012.0  De 30 a 34 años  \n",
       "30   1681457.0  De 30 a 34 años  \n",
       "31   1645555.0  De 30 a 34 años  \n",
       "33   3098212.0  De 35 a 39 años  \n",
       "34   1553397.0  De 35 a 39 años  \n",
       "35   1544816.0  De 35 a 39 años  \n",
       "37   2759246.0  De 40 a 44 años  \n",
       "38   1376202.0  De 40 a 44 años  \n",
       "39   1383044.0  De 40 a 44 años  \n",
       "41   2470892.0  De 45 a 49 años  \n",
       "42   1231006.0  De 45 a 49 años  \n",
       "43   1239886.0  De 45 a 49 años  \n",
       "45   2390357.0  De 50 a 54 años  \n",
       "46   1178744.0  De 50 a 54 años  \n",
       "47   1211613.0  De 50 a 54 años  \n",
       "49   1971326.0  De 55 a 59 años  \n",
       "50    964063.0  De 55 a 59 años  \n",
       "51   1007263.0  De 55 a 59 años  \n",
       "53   2024332.0  De 60 a 64 años  \n",
       "54    964484.0  De 60 a 64 años  \n",
       "55   1059848.0  De 60 a 64 años  \n",
       "57   2079981.0  De 65 a 69 años  \n",
       "58    968726.0  De 65 a 69 años  \n",
       "59   1111255.0  De 65 a 69 años  \n",
       "61   1743525.0  De 70 a 74 años  \n",
       "62    772836.0  De 70 a 74 años  \n",
       "63    970689.0  De 70 a 74 años  \n",
       "65   1298054.0  De 75 a 79 años  \n",
       "66    531889.0  De 75 a 79 años  \n",
       "67    766165.0  De 75 a 79 años  \n",
       "69    796684.0  De 80 a 84 años  \n",
       "70    281937.0  De 80 a 84 años  \n",
       "71    514747.0  De 80 a 84 años  \n",
       "85      1842.0   100 y más años  \n",
       "86       443.0   100 y más años  \n",
       "87      1400.0   100 y más años  "
      ]
     },
     "execution_count": 253,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "population_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Impute the dataframe \n",
    "population['Gender'] = Gender\n",
    "population['Year'] = Year\n",
    "population['All.Ages'] = All_Ages\n",
    "population['0 to 4'] = d0to4\n",
    "population['5 to 9'] = d5to9\n",
    "population['10 to 14'] = d10to14\n",
    "population['15 to 19'] = d15to19\n",
    "population['20 to 24'] = d20to24\n",
    "population['25 to 29'] = d25to29\n",
    "population['30 to 34'] = d30to34\n",
    "population['35 to 39'] = d35to39\n",
    "population['40 to 44'] = d40to44\n",
    "population['45 to 49'] = d45to49\n",
    "population['50 to 54'] = d50to54\n",
    "population['55 to 59'] = d55to59\n",
    "population['60 to 64'] = d60to64\n",
    "population['65 to 69'] = d65to69\n",
    "population['70 to 74'] = d70to74\n",
    "population['75 to 79'] = d75to79\n",
    "population['80 to 84'] = d80to84\n",
    "population['85 to 89'] = d85to89\n",
    "population['90 to 94'] = d90to94\n",
    "population['95 to 99'] = d95to99\n",
    "population['100 or More'] = d100orMore"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###### Combining Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Year</th>\n",
       "      <th>All.Ages</th>\n",
       "      <th>0 to 4</th>\n",
       "      <th>5 to 9</th>\n",
       "      <th>10 to 14</th>\n",
       "      <th>15 to 19</th>\n",
       "      <th>20 to 24</th>\n",
       "      <th>25 to 29</th>\n",
       "      <th>30 to 34</th>\n",
       "      <th>35 to 39</th>\n",
       "      <th>40 to 44</th>\n",
       "      <th>45 to 49</th>\n",
       "      <th>50 to 54</th>\n",
       "      <th>55 to 59</th>\n",
       "      <th>60 to 64</th>\n",
       "      <th>65 to 69</th>\n",
       "      <th>70 to 74</th>\n",
       "      <th>75 to 79</th>\n",
       "      <th>80 to 84</th>\n",
       "      <th>85 to 89</th>\n",
       "      <th>90 to 94</th>\n",
       "      <th>95 to 99</th>\n",
       "      <th>100 or More</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2016</td>\n",
       "      <td>46400000.0</td>\n",
       "      <td>2202761.0</td>\n",
       "      <td>2477204.0</td>\n",
       "      <td>2345436.0</td>\n",
       "      <td>2185630.0</td>\n",
       "      <td>2280631.0</td>\n",
       "      <td>2564166.0</td>\n",
       "      <td>3100404.0</td>\n",
       "      <td>3849019.0</td>\n",
       "      <td>3924814.0</td>\n",
       "      <td>3712893.0</td>\n",
       "      <td>3461060.0</td>\n",
       "      <td>3073611.0</td>\n",
       "      <td>2568305.0</td>\n",
       "      <td>2348133.0</td>\n",
       "      <td>1975727.0</td>\n",
       "      <td>1584129.0</td>\n",
       "      <td>1430780.0</td>\n",
       "      <td>889323.0</td>\n",
       "      <td>371148.0</td>\n",
       "      <td>84189.0</td>\n",
       "      <td>10735.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>2016</td>\n",
       "      <td>22800000.0</td>\n",
       "      <td>1135064.0</td>\n",
       "      <td>1278835.0</td>\n",
       "      <td>1205603.0</td>\n",
       "      <td>1125439.0</td>\n",
       "      <td>1163626.0</td>\n",
       "      <td>1284351.0</td>\n",
       "      <td>1551405.0</td>\n",
       "      <td>1951416.0</td>\n",
       "      <td>1998599.0</td>\n",
       "      <td>1874517.0</td>\n",
       "      <td>1725132.0</td>\n",
       "      <td>1514132.0</td>\n",
       "      <td>1248590.0</td>\n",
       "      <td>1117039.0</td>\n",
       "      <td>915285.0</td>\n",
       "      <td>690957.0</td>\n",
       "      <td>578509.0</td>\n",
       "      <td>315908.0</td>\n",
       "      <td>111027.0</td>\n",
       "      <td>20229.0</td>\n",
       "      <td>1800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Female</td>\n",
       "      <td>2016</td>\n",
       "      <td>23600000.0</td>\n",
       "      <td>1067698.0</td>\n",
       "      <td>1198369.0</td>\n",
       "      <td>1139833.0</td>\n",
       "      <td>1060191.0</td>\n",
       "      <td>1117005.0</td>\n",
       "      <td>1279815.0</td>\n",
       "      <td>1548999.0</td>\n",
       "      <td>1897603.0</td>\n",
       "      <td>1926214.0</td>\n",
       "      <td>1838377.0</td>\n",
       "      <td>1735928.0</td>\n",
       "      <td>1559480.0</td>\n",
       "      <td>1319715.0</td>\n",
       "      <td>1231094.0</td>\n",
       "      <td>1060442.0</td>\n",
       "      <td>893172.0</td>\n",
       "      <td>852271.0</td>\n",
       "      <td>573415.0</td>\n",
       "      <td>260121.0</td>\n",
       "      <td>63960.0</td>\n",
       "      <td>8935.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>2015</td>\n",
       "      <td>46400000.0</td>\n",
       "      <td>2256693.0</td>\n",
       "      <td>2484376.0</td>\n",
       "      <td>2308009.0</td>\n",
       "      <td>2153295.0</td>\n",
       "      <td>2319300.0</td>\n",
       "      <td>2640339.0</td>\n",
       "      <td>3269864.0</td>\n",
       "      <td>3949790.0</td>\n",
       "      <td>3889668.0</td>\n",
       "      <td>3691008.0</td>\n",
       "      <td>3408997.0</td>\n",
       "      <td>2978374.0</td>\n",
       "      <td>2507836.0</td>\n",
       "      <td>2357513.0</td>\n",
       "      <td>1949028.0</td>\n",
       "      <td>1553066.0</td>\n",
       "      <td>1425565.0</td>\n",
       "      <td>855423.0</td>\n",
       "      <td>357162.0</td>\n",
       "      <td>78777.0</td>\n",
       "      <td>15479.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>2015</td>\n",
       "      <td>22800000.0</td>\n",
       "      <td>1163218.0</td>\n",
       "      <td>1281689.0</td>\n",
       "      <td>1187484.0</td>\n",
       "      <td>1107969.0</td>\n",
       "      <td>1181541.0</td>\n",
       "      <td>1321886.0</td>\n",
       "      <td>1642803.0</td>\n",
       "      <td>2011297.0</td>\n",
       "      <td>1982454.0</td>\n",
       "      <td>1861331.0</td>\n",
       "      <td>1698889.0</td>\n",
       "      <td>1467132.0</td>\n",
       "      <td>1219621.0</td>\n",
       "      <td>1120627.0</td>\n",
       "      <td>902510.0</td>\n",
       "      <td>673645.0</td>\n",
       "      <td>573317.0</td>\n",
       "      <td>301428.0</td>\n",
       "      <td>105675.0</td>\n",
       "      <td>18584.0</td>\n",
       "      <td>3445.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Gender  Year    All.Ages     0 to 4     5 to 9   10 to 14   15 to 19  \\\n",
       "0  Both Genders  2016  46400000.0  2202761.0  2477204.0  2345436.0  2185630.0   \n",
       "1          Male  2016  22800000.0  1135064.0  1278835.0  1205603.0  1125439.0   \n",
       "2        Female  2016  23600000.0  1067698.0  1198369.0  1139833.0  1060191.0   \n",
       "3  Both Genders  2015  46400000.0  2256693.0  2484376.0  2308009.0  2153295.0   \n",
       "4          Male  2015  22800000.0  1163218.0  1281689.0  1187484.0  1107969.0   \n",
       "\n",
       "    20 to 24   25 to 29   30 to 34   35 to 39   40 to 44   45 to 49  \\\n",
       "0  2280631.0  2564166.0  3100404.0  3849019.0  3924814.0  3712893.0   \n",
       "1  1163626.0  1284351.0  1551405.0  1951416.0  1998599.0  1874517.0   \n",
       "2  1117005.0  1279815.0  1548999.0  1897603.0  1926214.0  1838377.0   \n",
       "3  2319300.0  2640339.0  3269864.0  3949790.0  3889668.0  3691008.0   \n",
       "4  1181541.0  1321886.0  1642803.0  2011297.0  1982454.0  1861331.0   \n",
       "\n",
       "    50 to 54   55 to 59   60 to 64   65 to 69   70 to 74   75 to 79  \\\n",
       "0  3461060.0  3073611.0  2568305.0  2348133.0  1975727.0  1584129.0   \n",
       "1  1725132.0  1514132.0  1248590.0  1117039.0   915285.0   690957.0   \n",
       "2  1735928.0  1559480.0  1319715.0  1231094.0  1060442.0   893172.0   \n",
       "3  3408997.0  2978374.0  2507836.0  2357513.0  1949028.0  1553066.0   \n",
       "4  1698889.0  1467132.0  1219621.0  1120627.0   902510.0   673645.0   \n",
       "\n",
       "    80 to 84  85 to 89  90 to 94  95 to 99  100 or More  \n",
       "0  1430780.0  889323.0  371148.0   84189.0      10735.0  \n",
       "1   578509.0  315908.0  111027.0   20229.0       1800.0  \n",
       "2   852271.0  573415.0  260121.0   63960.0       8935.0  \n",
       "3  1425565.0  855423.0  357162.0   78777.0      15479.0  \n",
       "4   573317.0  301428.0  105675.0   18584.0       3445.0  "
      ]
     },
     "execution_count": 304,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "population.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 305,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>All Ages</th>\n",
       "      <th>Less Than 1 yo</th>\n",
       "      <th>1 yo</th>\n",
       "      <th>2 yo</th>\n",
       "      <th>3 yo</th>\n",
       "      <th>4 yo</th>\n",
       "      <th>5 to 9 yo</th>\n",
       "      <th>10 to 14 yo</th>\n",
       "      <th>15 to 19 yo</th>\n",
       "      <th>20 to 24 yo</th>\n",
       "      <th>25 to 29 yo</th>\n",
       "      <th>30 to 34 yo</th>\n",
       "      <th>35 to 39 yo</th>\n",
       "      <th>40 to 44 yo</th>\n",
       "      <th>45 to 49 yo</th>\n",
       "      <th>50 to 54 yo</th>\n",
       "      <th>55 to 59 yo</th>\n",
       "      <th>60 to 64 yo</th>\n",
       "      <th>65 to 69 yo</th>\n",
       "      <th>70 to 74 yo</th>\n",
       "      <th>75 to 79 yo</th>\n",
       "      <th>80 to 84 yo</th>\n",
       "      <th>85 to 89 yo</th>\n",
       "      <th>90 to 94 yo</th>\n",
       "      <th>Greater Than 95 yo</th>\n",
       "      <th>Death Code</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>371102</td>\n",
       "      <td>1700</td>\n",
       "      <td>179</td>\n",
       "      <td>87</td>\n",
       "      <td>70</td>\n",
       "      <td>75</td>\n",
       "      <td>299</td>\n",
       "      <td>375.0</td>\n",
       "      <td>1262.0</td>\n",
       "      <td>2004.0</td>\n",
       "      <td>2338.0</td>\n",
       "      <td>3218.0</td>\n",
       "      <td>4011.0</td>\n",
       "      <td>5013.0</td>\n",
       "      <td>6602.0</td>\n",
       "      <td>9426.0</td>\n",
       "      <td>12134.0</td>\n",
       "      <td>18230.0</td>\n",
       "      <td>30699.0</td>\n",
       "      <td>42781.0</td>\n",
       "      <td>56267.0</td>\n",
       "      <td>60927.0</td>\n",
       "      <td>62627.0</td>\n",
       "      <td>37635.0</td>\n",
       "      <td>13143.0</td>\n",
       "      <td>A00-Y89</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>195255</td>\n",
       "      <td>940</td>\n",
       "      <td>93</td>\n",
       "      <td>41</td>\n",
       "      <td>36</td>\n",
       "      <td>40</td>\n",
       "      <td>187</td>\n",
       "      <td>231.0</td>\n",
       "      <td>921.0</td>\n",
       "      <td>1541.0</td>\n",
       "      <td>1807.0</td>\n",
       "      <td>2388.0</td>\n",
       "      <td>2928.0</td>\n",
       "      <td>3505.0</td>\n",
       "      <td>4633.0</td>\n",
       "      <td>6740.0</td>\n",
       "      <td>8729.0</td>\n",
       "      <td>12869.0</td>\n",
       "      <td>21131.0</td>\n",
       "      <td>27184.0</td>\n",
       "      <td>31972.0</td>\n",
       "      <td>27995.0</td>\n",
       "      <td>23932.0</td>\n",
       "      <td>12048.0</td>\n",
       "      <td>3364.0</td>\n",
       "      <td>A00-Y89</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>175847</td>\n",
       "      <td>760</td>\n",
       "      <td>86</td>\n",
       "      <td>46</td>\n",
       "      <td>34</td>\n",
       "      <td>35</td>\n",
       "      <td>112</td>\n",
       "      <td>144.0</td>\n",
       "      <td>341.0</td>\n",
       "      <td>463.0</td>\n",
       "      <td>531.0</td>\n",
       "      <td>830.0</td>\n",
       "      <td>1083.0</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>1969.0</td>\n",
       "      <td>2686.0</td>\n",
       "      <td>3405.0</td>\n",
       "      <td>5361.0</td>\n",
       "      <td>9568.0</td>\n",
       "      <td>15597.0</td>\n",
       "      <td>24295.0</td>\n",
       "      <td>32932.0</td>\n",
       "      <td>38695.0</td>\n",
       "      <td>25587.0</td>\n",
       "      <td>9779.0</td>\n",
       "      <td>A00-Y89</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Both Genders</td>\n",
       "      <td>6520</td>\n",
       "      <td>24</td>\n",
       "      <td>23</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>21</td>\n",
       "      <td>10.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>201.0</td>\n",
       "      <td>497.0</td>\n",
       "      <td>624.0</td>\n",
       "      <td>392.0</td>\n",
       "      <td>219.0</td>\n",
       "      <td>184.0</td>\n",
       "      <td>221.0</td>\n",
       "      <td>292.0</td>\n",
       "      <td>476.0</td>\n",
       "      <td>655.0</td>\n",
       "      <td>787.0</td>\n",
       "      <td>710.0</td>\n",
       "      <td>664.0</td>\n",
       "      <td>316.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>A00-B99</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Male</td>\n",
       "      <td>3934</td>\n",
       "      <td>15</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>3.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>142.0</td>\n",
       "      <td>391.0</td>\n",
       "      <td>525.0</td>\n",
       "      <td>327.0</td>\n",
       "      <td>174.0</td>\n",
       "      <td>144.0</td>\n",
       "      <td>171.0</td>\n",
       "      <td>178.0</td>\n",
       "      <td>302.0</td>\n",
       "      <td>368.0</td>\n",
       "      <td>402.0</td>\n",
       "      <td>306.0</td>\n",
       "      <td>261.0</td>\n",
       "      <td>121.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>A00-B99</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Gender All Ages Less Than 1 yo 1 yo 2 yo 3 yo 4 yo 5 to 9 yo  \\\n",
       "1  Both Genders   371102           1700  179   87   70   75       299   \n",
       "2          Male   195255            940   93   41   36   40       187   \n",
       "3        Female   175847            760   86   46   34   35       112   \n",
       "5  Both Genders     6520             24   23    9   12    6        21   \n",
       "6          Male     3934             15   11    4    7    4        11   \n",
       "\n",
       "   10 to 14 yo  15 to 19 yo  20 to 24 yo  25 to 29 yo  30 to 34 yo  \\\n",
       "1        375.0       1262.0       2004.0       2338.0       3218.0   \n",
       "2        231.0        921.0       1541.0       1807.0       2388.0   \n",
       "3        144.0        341.0        463.0        531.0        830.0   \n",
       "5         10.0         19.0         50.0        201.0        497.0   \n",
       "6          3.0         15.0         28.0        142.0        391.0   \n",
       "\n",
       "   35 to 39 yo  40 to 44 yo  45 to 49 yo  50 to 54 yo  55 to 59 yo  \\\n",
       "1       4011.0       5013.0       6602.0       9426.0      12134.0   \n",
       "2       2928.0       3505.0       4633.0       6740.0       8729.0   \n",
       "3       1083.0       1508.0       1969.0       2686.0       3405.0   \n",
       "5        624.0        392.0        219.0        184.0        221.0   \n",
       "6        525.0        327.0        174.0        144.0        171.0   \n",
       "\n",
       "   60 to 64 yo  65 to 69 yo  70 to 74 yo  75 to 79 yo  80 to 84 yo  \\\n",
       "1      18230.0      30699.0      42781.0      56267.0      60927.0   \n",
       "2      12869.0      21131.0      27184.0      31972.0      27995.0   \n",
       "3       5361.0       9568.0      15597.0      24295.0      32932.0   \n",
       "5        292.0        476.0        655.0        787.0        710.0   \n",
       "6        178.0        302.0        368.0        402.0        306.0   \n",
       "\n",
       "   85 to 89 yo  90 to 94 yo  Greater Than 95 yo Death Code  Year  \n",
       "1      62627.0      37635.0             13143.0    A00-Y89  1999  \n",
       "2      23932.0      12048.0              3364.0    A00-Y89  1999  \n",
       "3      38695.0      25587.0              9779.0    A00-Y89  1999  \n",
       "5        664.0        316.0               108.0    A00-B99  1999  \n",
       "6        261.0        121.0                24.0    A00-B99  1999  "
      ]
     },
     "execution_count": 305,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 309,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = final_data.merge(population, how='left', on=['Gender', 'Year'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 312,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save data \n",
    "path = '/Users/matthewkeys/Desktop/CRES/Liver-Health-Project-2/'\n",
    "data.to_csv(path+\"final_data.csv\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda root]",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
